{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"description": "IAM actions",
	"type": "array",
	"anyOf": [
		{ "items": { "type": "string" } },
		{
			"items": {
				"enum": [
					"service:Action",
					"directconnect:AllocateConnectionOnInterconnect",
					"directconnect:AllocatePrivateVirtualInterface",
					"directconnect:AllocatePublicVirtualInterface",
					"directconnect:ConfirmConnection",
					"directconnect:ConfirmPrivateVirtualInterface",
					"directconnect:ConfirmPublicVirtualInterface",
					"directconnect:CreateConnection",
					"directconnect:CreateInterconnect",
					"directconnect:CreatePrivateVirtualInterface",
					"directconnect:CreatePublicVirtualInterface",
					"directconnect:DeleteConnection",
					"directconnect:DeleteInterconnect",
					"directconnect:DeleteVirtualInterface",
					"directconnect:DescribeConnections",
					"directconnect:DescribeConnectionsOnInterconnect",
					"directconnect:DescribeInterconnects",
					"directconnect:DescribeLocations",
					"directconnect:DescribeVirtualGateways",
					"directconnect:DescribeVirtualInterfaces",
					"dynamodb:BatchGetItem",
					"dynamodb:BatchWriteItem",
					"dynamodb:CreateTable",
					"dynamodb:DeleteItem",
					"dynamodb:DeleteTable",
					"dynamodb:DescribeLimits",
					"dynamodb:DescribeReservedCapacity",
					"dynamodb:DescribeReservedCapacityOfferings",
					"dynamodb:DescribeStream",
					"dynamodb:DescribeTable",
					"dynamodb:GetItem",
					"dynamodb:GetRecords",
					"dynamodb:GetShardIterator",
					"dynamodb:ListStreams",
					"dynamodb:ListTables",
					"dynamodb:ListTagsOfResource",
					"dynamodb:PurchaseReservedCapacityOfferings",
					"dynamodb:PutItem",
					"dynamodb:Query",
					"dynamodb:Scan",
					"dynamodb:UpdateItem",
					"dynamodb:UpdateTable",
					"elasticfilesystem:CreateFileSystem",
					"elasticfilesystem:CreateTags",
					"elasticfilesystem:DescribeTags",
					"elasticfilesystem:DeleteTags",
					"elasticfilesystem:CreateMountTarget",
					"elasticfilesystem:ModifyMountTargetSecurityGroups",
					"elasticfilesystem:DescribeMountTargetSecurityGroups",
					"elasticfilesystem:DescribeFileSystems",
					"elasticfilesystem:DescribeMountTargets",
					"elasticfilesystem:DeleteMountTarget",
					"elasticfilesystem:DeleteFileSystem",
					"shield:CreateProtection",
					"shield:CreateSubscription",
					"shield:DeleteProtection",
					"shield:DeleteSubscription",
					"shield:DescribeAttack",
					"shield:DescribeProtection",
					"shield:DescribeSubscription",
					"shield:ListAttacks",
					"shield:ListProtections",
					"health:DescribeAffectedEntities",
					"health:DescribeEntityAggregates",
					"health:DescribeEventAggregates",
					"health:DescribeEvents",
					"health:DescribeEventDetails",
					"health:DescribeEventTypes",
					"mobileanalytics:PutEvents",
					"mobileanalytics:GetReports",
					"mobileanalytics:GetFinancialReports",
					"batch:CancelJob",
					"batch:CreateComputeEnvironment",
					"batch:CreateJobQueue",
					"batch:DeleteComputeEnvironment",
					"batch:DeleteJobQueue",
					"batch:DeregisterJobDefinition",
					"batch:DescribeComputeEnvironments",
					"batch:DescribeJobDefinitions",
					"batch:DescribeJobQueues",
					"batch:DescribeJobs",
					"batch:ListJobs",
					"batch:RegisterJobDefinition",
					"batch:SubmitJob",
					"batch:TerminateJob",
					"batch:UpdateComputeEnvironment",
					"batch:UpdateJobQueue",
					"events:DeleteRule",
					"events:DescribeRule",
					"events:DisableRule",
					"events:EnableRule",
					"events:ListRuleNamesByTarget",
					"events:ListRules",
					"events:ListTargetsByRule",
					"events:PutEvents",
					"events:PutRule",
					"events:PutTargets",
					"events:RemoveTargets",
					"events:TestEventPattern",
					"cloudformation:CancelUpdateStack",
					"cloudformation:ContinueUpdateRollback",
					"cloudformation:CreateChangeSet",
					"cloudformation:CreateStack",
					"cloudformation:CreateUploadBucket",
					"cloudformation:DeleteStack",
					"cloudformation:DescribeAccountLimits",
					"cloudformation:DescribeChangeSet",
					"cloudformation:DescribeStackEvents",
					"cloudformation:DescribeStackResource",
					"cloudformation:DescribeStackResources",
					"cloudformation:DescribeStacks",
					"cloudformation:EstimateTemplateCost",
					"cloudformation:ExecuteChangeSet",
					"cloudformation:GetStackPolicy",
					"cloudformation:GetTemplate",
					"cloudformation:GetTemplateSummary",
					"cloudformation:ListChangeSets",
					"cloudformation:ListStackResources",
					"cloudformation:ListStacks",
					"cloudformation:PreviewStackUpdate",
					"cloudformation:SetStackPolicy",
					"cloudformation:SignalResource",
					"cloudformation:UpdateStack",
					"cloudformation:ValidateTemplate",
					"servicecatalog:AcceptPortfolioShare",
					"servicecatalog:AssociatePrincipalWithPortfolio",
					"servicecatalog:AssociateProductWithPortfolio",
					"servicecatalog:CreateConstraint",
					"servicecatalog:CreatePortfolio",
					"servicecatalog:CreatePortfolioShare",
					"servicecatalog:CreateProduct",
					"servicecatalog:CreateProvisioningArtifact",
					"servicecatalog:DeleteConstraint",
					"servicecatalog:DeletePortfolio",
					"servicecatalog:DeletePortfolioShare",
					"servicecatalog:DeleteProduct",
					"servicecatalog:DeleteProvisioningArtifact",
					"servicecatalog:DescribeConstraint",
					"servicecatalog:DescribePortfolio",
					"servicecatalog:DescribeProduct",
					"servicecatalog:DescribeProductAsAdmin",
					"servicecatalog:DescribeProductView",
					"servicecatalog:DescribeProvisioningArtifact",
					"servicecatalog:DescribeProvisioningParameters",
					"servicecatalog:DescribeRecord",
					"servicecatalog:DisassociatePrincipalFromPortfolio",
					"servicecatalog:DisassociateProductFromPortfolio",
					"servicecatalog:ListAcceptedPortfolioShares",
					"servicecatalog:ListConstraintsForPortfolio",
					"servicecatalog:ListLaunchPaths",
					"servicecatalog:ListPortfolioAccess",
					"servicecatalog:ListPortfolios",
					"servicecatalog:ListPortfoliosForProduct",
					"servicecatalog:ListPrincipalsForPortfolio",
					"servicecatalog:ListProvisioningArtifacts",
					"servicecatalog:ListRecordHistory",
					"servicecatalog:ProvisionProduct",
					"servicecatalog:RejectPortfolioShare",
					"servicecatalog:ScanProvisionedProducts",
					"servicecatalog:SearchProducts",
					"servicecatalog:SearchProductsAsAdmin",
					"servicecatalog:TerminateProvisionedProduct",
					"servicecatalog:UpdateConstraint",
					"servicecatalog:UpdatePortfolio",
					"servicecatalog:UpdateProduct",
					"servicecatalog:UpdateProvisionedProduct",
					"servicecatalog:UpdateProvisioningArtifact",
					"glacier:AbortVaultLock",
					"glacier:AddTagsToVault",
					"glacier:AbortMultipartUpload",
					"glacier:CompleteMultipartUpload",
					"glacier:CompleteVaultLock",
					"glacier:CreateVault",
					"glacier:DeleteArchive",
					"glacier:DeleteVault",
					"glacier:DeleteVaultAccessPolicy",
					"glacier:DeleteVaultNotifications",
					"glacier:DescribeJob",
					"glacier:DescribeVault",
					"glacier:GetDataRetrievalPolicy",
					"glacier:GetJobOutput",
					"glacier:GetVaultAccessPolicy",
					"glacier:GetVaultLock",
					"glacier:GetVaultNotifications",
					"glacier:InitiateJob",
					"glacier:InitiateMultipartUpload",
					"glacier:InitiateVaultLock",
					"glacier:ListJobs",
					"glacier:ListMultipartUploads",
					"glacier:ListParts",
					"glacier:ListTagsForVault",
					"glacier:ListVaults",
					"glacier:RemoveTagsFromVault",
					"glacier:SetDataRetrievalPolicy",
					"glacier:SetVaultAccessPolicy",
					"glacier:SetVaultNotifications",
					"glacier:UploadArchive",
					"glacier:UploadMultipartPart",
					"opsworks:AssignVolume",
					"opsworks:AssociateElasticIp",
					"opsworks:AttachElasticLoadBalancer",
					"opsworks:CloneStack",
					"opsworks:CreateApp",
					"opsworks:CreateDeployment",
					"opsworks:CreateInstance",
					"opsworks:CreateLayer",
					"opsworks:CreateStack",
					"opsworks:CreateUserProfile",
					"opsworks:DeleteApp",
					"opsworks:DeleteInstance",
					"opsworks:DeleteLayer",
					"opsworks:DeleteStack",
					"opsworks:DeleteUserProfile",
					"opsworks:DeregisterElasticIp",
					"opsworks:DeregisterVolume",
					"opsworks:DescribeApps",
					"opsworks:DescribeCommands",
					"opsworks:DescribeDeployments",
					"opsworks:DescribeElasticIps",
					"opsworks:DescribeElasticLoadBalancers",
					"opsworks:DescribeInstances",
					"opsworks:DescribeLayers",
					"opsworks:DescribeLoadBasedAutoScaling",
					"opsworks:DescribePermissions",
					"opsworks:DescribeRaidArrays",
					"opsworks:DescribeRdsDbInstances",
					"opsworks:DescribeServiceErrors",
					"opsworks:DescribeStacks",
					"opsworks:DescribeTimeBasedAutoScaling",
					"opsworks:DescribeUserProfiles",
					"opsworks:DescribeVolumes",
					"opsworks:DetachElasticLoadBalancer",
					"opsworks:DisassociateElasticIp",
					"opsworks:GetHostnameSuggestion",
					"opsworks:RebootInstance",
					"opsworks:RegisterElasticIp",
					"opsworks:RegisterVolume",
					"opsworks:SetLoadBasedAutoScaling",
					"opsworks:SetPermission",
					"opsworks:SetTimeBasedAutoScaling",
					"opsworks:StartInstance",
					"opsworks:StartStack",
					"opsworks:StopInstance",
					"opsworks:StopStack",
					"opsworks:UnassignVolume",
					"opsworks:UpdateApp",
					"opsworks:UpdateElasticIp",
					"opsworks:UpdateInstance",
					"opsworks:UpdateLayer",
					"opsworks:UpdateStack",
					"opsworks:UpdateUserProfile",
					"opsworks:UpdateVolume",
					"codedeploy:AddTagsToOnPremisesInstances",
					"codedeploy:BatchGetApplicationRevisions",
					"codedeploy:BatchGetApplications",
					"codedeploy:BatchGetDeploymentGroups",
					"codedeploy:BatchGetDeploymentInstances",
					"codedeploy:BatchGetDeployments",
					"codedeploy:BatchGetOnPremisesInstances",
					"codedeploy:ContinueDeployment",
					"codedeploy:CreateApplication",
					"codedeploy:CreateDeployment",
					"codedeploy:CreateDeploymentConfig",
					"codedeploy:CreateDeploymentGroup",
					"codedeploy:DeleteApplication",
					"codedeploy:DeleteDeploymentConfig",
					"codedeploy:DeleteDeploymentGroup",
					"codedeploy:DeregisterOnPremisesInstance",
					"codedeploy:GetApplication",
					"codedeploy:GetApplicationRevision",
					"codedeploy:GetDeployment",
					"codedeploy:GetDeploymentConfig",
					"codedeploy:GetDeploymentGroup",
					"codedeploy:GetDeploymentInstance",
					"codedeploy:GetOnPremisesInstance",
					"codedeploy:ListApplicationRevisions",
					"codedeploy:ListApplications",
					"codedeploy:ListDeploymentConfigs",
					"codedeploy:ListDeploymentGroups",
					"codedeploy:ListDeploymentInstances",
					"codedeploy:ListDeployments",
					"codedeploy:ListGitHubAccountTokenNames",
					"codedeploy:ListOnPremisesInstances",
					"codedeploy:RegisterApplicationRevision",
					"codedeploy:RegisterOnPremisesInstance",
					"codedeploy:RemoveTagsFromOnPremisesInstances",
					"codedeploy:SkipWaitTimeForInstanceTermination",
					"codedeploy:StopDeployment",
					"codedeploy:UpdateApplication",
					"codedeploy:UpdateDeploymentGroup",
					"inspector:AddAttributesToFindings",
					"inspector:AttachAssessmentAndRulesPackage",
					"inspector:CreateApplication",
					"inspector:CreateAssessment",
					"inspector:CreateResourceGroup",
					"inspector:DeleteApplication",
					"inspector:DeleteAssessment",
					"inspector:DeleteRun",
					"inspector:DescribeApplication",
					"inspector:DescribeAssessment",
					"inspector:DescribeCrossAccountAccessRole",
					"inspector:DescribeFinding",
					"inspector:DescribeResourceGroup",
					"inspector:DescribeRulesPackage",
					"inspector:DescribeRun",
					"inspector:DetachAssessmentAndRulesPackage",
					"inspector:GetAssessmentTelemetry",
					"inspector:ListApplications",
					"inspector:ListAssessmentAgents",
					"inspector:ListAssessments",
					"inspector:ListAttachedAssessments",
					"inspector:ListAttachedRulesPackages",
					"inspector:ListFindings",
					"inspector:ListRulesPackages",
					"inspector:ListRuns",
					"inspector:ListTagsForResource",
					"inspector:LocalizeText",
					"inspector:PreviewAgentsForResourceGroup",
					"inspector:RegisterCrossAccountAccessRole",
					"inspector:RemoveAttributesFromFindings",
					"inspector:RetireRulesPackage",
					"inspector:RunAssessment",
					"inspector:SetTagsForResource",
					"inspector:StartDataCollection",
					"inspector:StopDataCollection",
					"inspector:UpdateApplication",
					"inspector:UpdateAssessment",
					"kinesis:AddTagsToStream",
					"kinesis:CreateStream",
					"kinesis:DecreaseStreamRetentionPeriod",
					"kinesis:DeleteStream",
					"kinesis:DescribeLimits",
					"kinesis:DescribeStream",
					"kinesis:DescribeStreamSummary",
					"kinesis:DisableEnhancedMonitoring",
					"kinesis:EnableEnhancedMonitoring",
					"kinesis:GetRecords",
					"kinesis:GetShardIterator",
					"kinesis:IncreaseStreamRetentionPeriod",
					"kinesis:ListStreams",
					"kinesis:ListTagsForStream",
					"kinesis:MergeShards",
					"kinesis:PutRecord",
					"kinesis:PutRecords",
					"kinesis:RemoveTagsFromStream",
					"kinesis:SplitShard",
					"kinesis:StartStreamEncryption",
					"kinesis:StopStreamEncryption",
					"kinesis:UpdateShardCount",
					"apigateway:GET",
					"apigateway:POST",
					"apigateway:PUT",
					"apigateway:DELETE",
					"apigateway:PATCH",
					"apigateway:HEAD",
					"apigateway:OPTIONS",
					"cloudtrail:AddTags",
					"cloudtrail:CreateTrail",
					"cloudtrail:DeleteTrail",
					"cloudtrail:DescribeTrails",
					"cloudtrail:GetTrailStatus",
					"cloudtrail:ListPublicKeys",
					"cloudtrail:ListTags",
					"cloudtrail:LookupEvents",
					"cloudtrail:RemoveTags",
					"cloudtrail:StartLogging",
					"cloudtrail:StopLogging",
					"cloudtrail:UpdateTrail",
					"lex:CreateBotVersion",
					"lex:CreateIntentVersion",
					"lex:CreateSlotTypeVersion",
					"lex:DeleteBot",
					"lex:DeleteBotAlias",
					"lex:DeleteBotChannelAssociation",
					"lex:DeleteBotVersion",
					"lex:DeleteIntent",
					"lex:DeleteIntentVersion",
					"lex:DeleteSlotType",
					"lex:DeleteSlotTypeVersion",
					"lex:DeleteUtterances",
					"lex:GetBot",
					"lex:GetBotAlias",
					"lex:GetBotAliases",
					"lex:GetBotChannelAssociation",
					"lex:GetBotChannelAssociations",
					"lex:GetBuiltinIntent",
					"lex:GetBuiltinIntents",
					"lex:GetBuiltinSlotTypes",
					"lex:GetBots",
					"lex:GetBotVersions",
					"lex:GetIntent",
					"lex:GetIntents",
					"lex:GetIntentVersions",
					"lex:GetSlotType",
					"lex:GetSlotTypes",
					"lex:GetSlotTypeVersions",
					"lex:GetUtterancesView",
					"lex:PostContent",
					"lex:PostText",
					"lex:PutBot",
					"lex:PutBotAlias",
					"lex:PutIntent",
					"lex:PutSlotType",
					"importexport:CreateJob",
					"importexport:UpdateJob",
					"importexport:CancelJob",
					"importexport:ListJobs",
					"importexport:GetStatus",
					"importexport:GetShippingLabel",
					"cloudsearch:BuildSuggesters",
					"cloudsearch:CreateDomain",
					"cloudsearch:DefineAnalysisScheme",
					"cloudsearch:DefineExpression",
					"cloudsearch:DefineIndexField",
					"cloudsearch:DefineIndexFields",
					"cloudsearch:DefineSuggester",
					"cloudsearch:DeleteAnalysisScheme",
					"cloudsearch:DeleteDomain",
					"cloudsearch:DeleteExpression",
					"cloudsearch:DeleteIndexField",
					"cloudsearch:DeleteSuggester",
					"cloudsearch:DescribeAnalysisSchemes",
					"cloudsearch:DescribeAvailabilityOptions",
					"cloudsearch:DescribeDomains",
					"cloudsearch:DescribeExpressions",
					"cloudsearch:DescribeIndexFields",
					"cloudsearch:DescribeScalingParameters",
					"cloudsearch:DescribeServiceAccessPolicies",
					"cloudsearch:DescribeSuggesters",
					"cloudsearch:document",
					"cloudsearch:IndexDocuments",
					"cloudsearch:ListDomainNames",
					"cloudsearch:search",
					"cloudsearch:suggest",
					"cloudsearch:UpdateAvailabilityOptions",
					"cloudsearch:UpdateScalingParameters",
					"cloudsearch:UpdateServiceAccessPolicies",
					"elasticache:AddTagsToResource",
					"elasticache:AuthorizeCacheSecurityGroupIngress",
					"elasticache:CopySnapshot",
					"elasticache:CreateCacheCluster",
					"elasticache:CreateCacheParameterGroup",
					"elasticache:CreateCacheSecurityGroup",
					"elasticache:CreateCacheSubnetGroup",
					"elasticache:CreateReplicationGroup",
					"elasticache:CreateSnapshot",
					"elasticache:DeleteCacheCluster",
					"elasticache:DeleteCacheParameterGroup",
					"elasticache:DeleteCacheSecurityGroup",
					"elasticache:DeleteCacheSubnetGroup",
					"elasticache:DeleteReplicationGroup",
					"elasticache:DeleteSnapshot",
					"elasticache:DescribeCacheClusters",
					"elasticache:DescribeCacheEngineVersions",
					"elasticache:DescribeCacheParameterGroups",
					"elasticache:DescribeCacheParameters",
					"elasticache:DescribeCacheSecurityGroups",
					"elasticache:DescribeCacheSubnetGroups",
					"elasticache:DescribeEngineDefaultParameters",
					"elasticache:DescribeEvents",
					"elasticache:DescribeReplicationGroups",
					"elasticache:DescribeReservedCacheNodes",
					"elasticache:DescribeReservedCacheNodesOfferings",
					"elasticache:DescribeSnapshots",
					"elasticache:ListAllowedNodeTypeModifications",
					"elasticache:ListTagsForResource",
					"elasticache:ModifyCacheCluster",
					"elasticache:ModifyCacheParameterGroup",
					"elasticache:ModifyCacheSubnetGroup",
					"elasticache:ModifyReplicationGroup",
					"elasticache:PurchaseReservedCacheNodesOffering",
					"elasticache:RebootCacheCluster",
					"elasticache:RemoveTagsFromResource",
					"elasticache:ResetCacheParameterGroup",
					"elasticache:RevokeCacheSecurityGroupIngress",
					"trustedadvisor:DescribeCheckItems",
					"trustedadvisor:DescribeCheckRefreshStatuses",
					"trustedadvisor:DescribeCheckStatusHistoryChanges",
					"trustedadvisor:DescribeCheckSummaries",
					"trustedadvisor:DescribeNotificationPreferences",
					"trustedadvisor:ExcludeCheckItems",
					"trustedadvisor:IncludeCheckItems",
					"trustedadvisor:RefreshCheck",
					"trustedadvisor:UpdateNotificationPreferences",
					"sts:AssumeRole",
					"sts:AssumeRoleWithSAML",
					"sts:AssumeRoleWithWebIdentity",
					"sts:DecodeAuthorizationMessage",
					"sts:GetFederationToken",
					"sts:GetSessionToken",
					"kinesisanalytics:AddApplicationInput",
					"kinesisanalytics:AddApplicationOutput",
					"kinesisanalytics:AddApplicationReferenceDataSource",
					"kinesisanalytics:CreateApplication",
					"kinesisanalytics:DeleteApplication",
					"kinesisanalytics:DeleteApplicationOutput",
					"kinesisanalytics:DeleteApplicationReferenceDataSource",
					"kinesisanalytics:DescribeApplication",
					"kinesisanalytics:DiscoverInputSchema",
					"kinesisanalytics:ListApplications",
					"kinesisanalytics:StartApplication",
					"kinesisanalytics:StopApplication",
					"kinesisanalytics:UpdateApplication",
					"codecommit:BatchGetRepositories",
					"codecommit:CreateBranch",
					"codecommit:CreateRepository",
					"codecommit:DeleteRepository",
					"codecommit:GetBlob",
					"codecommit:GetBranch",
					"codecommit:GetObjectIdentifier",
					"codecommit:GetRepository",
					"codecommit:GetTree",
					"codecommit:GitPull",
					"codecommit:GitPush",
					"codecommit:ListBranches",
					"codecommit:ListRepositories",
					"codecommit:UpdateDefaultBranch",
					"codecommit:UpdateRepositoryDescription",
					"codecommit:UpdateRepositoryName",
					"codecommit:GetCommit",
					"codecommit:GetCommitHistory",
					"codecommit:GetReferences",
					"codecommit:GetRepositoryTriggers",
					"codecommit:PutRepositoryTriggers",
					"codecommit:TestRepositoryTriggers",
					"codecommit:UploadArchive",
					"codecommit:GetUploadArchiveStatus",
					"codecommit:CancelUploadArchive",
					"appstream:CreateApplication",
					"appstream:CreateSession",
					"appstream:DeleteApplication",
					"appstream:GetApiRoot",
					"appstream:GetApplication",
					"appstream:GetApplications",
					"appstream:GetApplicationError",
					"appstream:GetApplicationErrors",
					"appstream:GetApplicationStatus",
					"appstream:GetSession",
					"appstream:GetSessions",
					"appstream:GetSessionStatus",
					"appstream:UpdateApplication",
					"appstream:UpdateApplicationState",
					"appstream:UpdateSessionState",
					"redshift:AuthorizeClusterSecurityGroupIngress",
					"redshift:AuthorizeSnapshotAccess",
					"redshift:CancelQuerySession",
					"redshift:CopyClusterSnapshot",
					"redshift:CreateCluster",
					"redshift:CreateClusterParameterGroup",
					"redshift:CreateClusterSecurityGroup",
					"redshift:CreateClusterSnapshot",
					"redshift:CreateClusterSubnetGroup",
					"redshift:CreateEventSubscription",
					"redshift:CreateHsmClientCertificate",
					"redshift:CreateHsmConfiguration",
					"redshift:CreateSnapshotCopyGrant",
					"redshift:CreateTags",
					"redshift:DeleteCluster",
					"redshift:DeleteClusterParameterGroup",
					"redshift:DeleteClusterSecurityGroup",
					"redshift:DeleteClusterSnapshot",
					"redshift:DeleteClusterSubnetGroup",
					"redshift:DeleteEventSubscription",
					"redshift:DeleteHsmClientCertificate",
					"redshift:DeleteHsmConfiguration",
					"redshift:DeleteTags",
					"redshift:DescribeClusterParameterGroups",
					"redshift:DescribeClusterParameters",
					"redshift:DescribeClusterSecurityGroups",
					"redshift:DescribeClusterSnapshots",
					"redshift:DescribeClusterSubnetGroups",
					"redshift:DescribeClusterVersions",
					"redshift:DescribeClusters",
					"redshift:DescribeDefaultClusterParameters",
					"redshift:DescribeEventCategories",
					"redshift:DescribeEventSubscriptions",
					"redshift:DescribeEvents",
					"redshift:DescribeHsmClientCertificates",
					"redshift:DescribeHsmConfigurations",
					"redshift:DescribeLoggingStatus",
					"redshift:DescribeOrderableClusterOptions",
					"redshift:DescribeReservedNodeOfferings",
					"redshift:DescribeReservedNodes",
					"redshift:DescribeResize",
					"redshift:DescribeSnapshotCopyGrants",
					"redshift:DescribeTableRestoreStatus",
					"redshift:DescribeTags",
					"redshift:DisableLogging",
					"redshift:DisableSnapshotCopy",
					"redshift:EnableLogging",
					"redshift:EnableSnapshotCopy",
					"redshift:GetClusterCredentials",
					"redshift:ModifyCluster",
					"redshift:ModifyClusterIamRoles",
					"redshift:ModifyClusterParameterGroup",
					"redshift:ModifyClusterSubnetGroup",
					"redshift:ModifyEventSubscription",
					"redshift:ModifySnapshotCopyRetentionPeriod",
					"redshift:PurchaseReservedNodeOffering",
					"redshift:RebootCluster",
					"redshift:ResetClusterParameterGroup",
					"redshift:RestoreFromClusterSnapshot",
					"redshift:RestoreTableFromClusterSnapshot",
					"redshift:RevokeClusterSecurityGroupIngress",
					"redshift:RevokeSnapshotAccess",
					"redshift:RotateEncryptionKey",
					"redshift:ViewQueriesInConsole",
					"sqs:AddPermission",
					"sqs:ChangeMessageVisibility",
					"sqs:ChangeMessageVisibilityBatch",
					"sqs:CreateQueue",
					"sqs:DeleteMessage",
					"sqs:DeleteMessageBatch",
					"sqs:DeleteQueue",
					"sqs:GetQueueAttributes",
					"sqs:GetQueueUrl",
					"sqs:ListDeadLetterSourceQueues",
					"sqs:ListQueues",
					"sqs:PurgeQueue",
					"sqs:ReceiveMessage",
					"sqs:RemovePermission",
					"sqs:SendMessage",
					"sqs:SendMessageBatch",
					"sqs:SetQueueAttributes",
					"rekognition:CompareFaces",
					"rekognition:CreateCollection",
					"rekognition:DeleteCollection",
					"rekognition:DeleteFaces",
					"rekognition:DetectFaces",
					"rekognition:DetectLabels",
					"rekognition:IndexFaces",
					"rekognition:ListCollections",
					"rekognition:ListFaces",
					"rekognition:SearchFaces",
					"rekognition:SearchFacesByImage",
					"mobiletargeting:CreateImportJob",
					"mobiletargeting:CreateCampaign",
					"mobiletargeting:CreateSegment",
					"mobiletargeting:DeleteAdmChannel",
					"mobiletargeting:DeleteApnsChannel",
					"mobiletargeting:DeleteApnsSandboxChannel",
					"mobiletargeting:DeleteCampaign",
					"mobiletargeting:DeleteGcmChannel",
					"mobiletargeting:DeleteSegment",
					"mobiletargeting:GetAdmChannel",
					"mobiletargeting:GetApnsChannel",
					"mobiletargeting:GetApnsSandboxChannel",
					"mobiletargeting:GetApplicationSettings",
					"mobiletargeting:GetCampaign",
					"mobiletargeting:GetCampaignActivities",
					"mobiletargeting:GetCampaigns",
					"mobiletargeting:GetCampaignVersion",
					"mobiletargeting:GetCampaignVersions",
					"mobiletargeting:GetEndpoint",
					"mobiletargeting:GetGcmChannel",
					"mobiletargeting:GetImportJob",
					"mobiletargeting:GetImportJobs",
					"mobiletargeting:GetReports",
					"mobiletargeting:GetSegment",
					"mobiletargeting:GetSegmentImportJobs",
					"mobiletargeting:GetSegments",
					"mobiletargeting:GetSegmentVersion",
					"mobiletargeting:GetSegmentVersions",
					"mobiletargeting:UpdateAdmChannel",
					"mobiletargeting:UpdateApnsChannel",
					"mobiletargeting:UpdateApnsSandboxChannel",
					"mobiletargeting:UpdateApplicationSettings",
					"mobiletargeting:UpdateCampaign",
					"mobiletargeting:UpdateEndpoint",
					"mobiletargeting:UpdateEndpointsBatch",
					"mobiletargeting:UpdateGcmChannel",
					"mobiletargeting:UpdateSegment",
					"discovery:CreateTags",
					"discovery:DeleteTags",
					"discovery:DescribeAgents",
					"discovery:DescribeConfigurations",
					"discovery:DescribeExportConfigurations",
					"discovery:DescribeTags",
					"discovery:ExportConfigurations",
					"discovery:ListConfigurations",
					"discovery:StartDataCollectionByAgentIds",
					"discovery:StopDataCollectionByAgentIds",
					"waf:CreateByteMatchSet",
					"waf:CreateIPSet",
					"waf:CreateRule",
					"waf:CreateSizeConstraintSet",
					"waf:CreateSqlInjectionMatchSet",
					"waf:CreateWebACL",
					"waf:CreateXssMatchSet",
					"waf:DeleteByteMatchSet",
					"waf:DeleteIPSet",
					"waf:DeleteRule",
					"waf:DeleteSizeConstraintSet",
					"waf:DeleteSqlInjectionMatchSet",
					"waf:DeleteWebACL",
					"waf:DeleteXssMatchSet",
					"waf:GetByteMatchSet",
					"waf:GetChangeToken",
					"waf:GetChangeTokenStatus",
					"waf:GetIPSet",
					"waf:GetRule",
					"waf:GetSampledRequests",
					"waf:GetSizeConstraintSet",
					"waf:GetSqlInjectionMatchSet",
					"waf:GetWebACL",
					"waf:GetXssMatchSet",
					"waf:ListByteMatchSets",
					"waf:ListIPSets",
					"waf:ListRules",
					"waf:ListSizeConstraintSets",
					"waf:ListSqlInjectionMatchSets",
					"waf:ListWebACLs",
					"waf:ListXssMatchSets",
					"waf:UpdateByteMatchSet",
					"waf:UpdateIPSet",
					"waf:UpdateRule",
					"waf:UpdateSizeConstraintSet",
					"waf:UpdateSqlInjectionMatchSet",
					"waf:UpdateWebACL",
					"waf:UpdateXssMatchSet",
					"dms:AddTagsToResource",
					"dms:CreateEndpoint",
					"dms:CreateReplicationInstance",
					"dms:CreateReplicationSubnetGroup",
					"dms:CreateReplicationTask",
					"dms:DeleteEndpoint",
					"dms:DeleteReplicationInstance",
					"dms:DeleteReplicationSubnetGroup",
					"dms:DeleteReplicationTask",
					"dms:DescribeAccountAttributes",
					"dms:DescribeConnections",
					"dms:DescribeEndpointTypes",
					"dms:DescribeEndpoints",
					"dms:DescribeOrderableReplicationInstances",
					"dms:DescribeRefreshSchemasStatus",
					"dms:DescribeReplicationInstances",
					"dms:DescribeReplicationSubnetGroups",
					"dms:DescribeReplicationTasks",
					"dms:DescribeSchemas",
					"dms:DescribeTableStatistics",
					"dms:ListTagsForResource",
					"dms:ModifyEndpoint",
					"dms:ModifyReplicationInstance",
					"dms:ModifyReplicationSubnetGroup",
					"dms:RefreshSchemas",
					"dms:RemoveTagsFromResource",
					"dms:StartReplicationTask",
					"dms:StopReplicationTask",
					"dms:TestConnection",
					"config:DeleteConfigRule",
					"config:DeleteDeliveryChannel",
					"config:DeliverConfigSnapshot",
					"config:DescribeComplianceByConfigRule",
					"config:DescribeComplianceByResource",
					"config:DescribeConfigRuleEvaluationStatus",
					"config:DescribeConfigRules",
					"config:DescribeConfigurationRecorderStatus",
					"config:DescribeConfigurationRecorders",
					"config:DescribeDeliveryChannelStatus",
					"config:DescribeDeliveryChannels",
					"config:GetComplianceDetailsByConfigRule",
					"config:GetComplianceDetailsByResource",
					"config:GetComplianceSummaryByConfigRule",
					"config:GetComplianceSummaryByResourceType",
					"config:GetResourceConfigHistory",
					"config:GetResources",
					"config:GetTagKeys",
					"config:ListDiscoveredResources",
					"config:PutConfigRule",
					"config:PutConfigurationRecorder",
					"config:PutDeliveryChannel",
					"config:PutEvaluations",
					"config:StartConfigurationRecorder",
					"config:StopConfigurationRecorder",
					"ses:CloneReceiptRuleSet",
					"ses:CreateReceiptFilter",
					"ses:CreateReceiptRule",
					"ses:CreateReceiptRuleSet",
					"ses:DeleteIdentity",
					"ses:DeleteIdentityPolicy",
					"ses:DeleteReceiptFilter",
					"ses:DeleteReceiptRule",
					"ses:DeleteReceiptRuleSet",
					"ses:DeleteVerifiedEmailAddress",
					"ses:DescribeActiveReceiptRuleSet",
					"ses:DescribeReceiptRule",
					"ses:DescribeReceiptRuleSet",
					"ses:GetIdentityDkimAttributes",
					"ses:GetIdentityNotificationAttributes",
					"ses:GetIdentityPolicies",
					"ses:GetIdentityVerificationAttributes",
					"ses:GetSendQuota",
					"ses:GetSendStatistics",
					"ses:ListIdentities",
					"ses:ListIdentityPolicies",
					"ses:ListReceiptFilters",
					"ses:ListReceiptRuleSets",
					"ses:ListVerifiedEmailAddresses",
					"ses:PutIdentityPolicy",
					"ses:ReorderReceiptRuleSet",
					"ses:SendBounce",
					"ses:SendEmail",
					"ses:SendRawEmail",
					"ses:SetActiveReceiptRuleSet",
					"ses:SetIdentityDkimEnabled",
					"ses:SetIdentityNotificationTopic",
					"ses:SetIdentityFeedbackForwardingEnabled",
					"ses:SetReceiptRulePosition",
					"ses:UpdateReceiptRule",
					"ses:VerifyDomainDkim",
					"ses:VerifyDomainIdentity",
					"ses:VerifyEmailAddress",
					"ses:VerifyEmailIdentity",
					"lightsail:AllocateStaticIp",
					"lightsail:AttachStaticIp",
					"lightsail:CloseInstancePublicPorts",
					"lightsail:CreateDomain",
					"lightsail:CreateDomainEntry",
					"lightsail:CreateInstanceSnapshot",
					"lightsail:CreateInstances",
					"lightsail:CreateInstancesFromSnapshot",
					"lightsail:CreateKeyPair",
					"lightsail:DeleteDomain",
					"lightsail:DeleteDomainEntry",
					"lightsail:DeleteInstance",
					"lightsail:DeleteInstanceSnapshot",
					"lightsail:DeleteKeyPair",
					"lightsail:DetachStaticIp",
					"lightsail:DownloadDefaultKeyPair",
					"lightsail:GetActiveNames",
					"lightsail:GetBlueprints",
					"lightsail:GetBundles",
					"lightsail:GetDomain",
					"lightsail:GetDomains",
					"lightsail:GetInstance",
					"lightsail:GetInstanceAccessDetails",
					"lightsail:GetInstanceMetricData",
					"lightsail:GetInstancePortStates",
					"lightsail:GetInstanceSnapshot",
					"lightsail:GetInstanceSnapshots",
					"lightsail:GetInstanceState",
					"lightsail:GetInstances",
					"lightsail:GetKeyPair",
					"lightsail:GetKeyPairs",
					"lightsail:GetOperation",
					"lightsail:GetOperations",
					"lightsail:GetOperationsForResource",
					"lightsail:GetRegions",
					"lightsail:GetStaticIp",
					"lightsail:GetStaticIps",
					"lightsail:ImportKeyPair",
					"lightsail:IsVpcPeered",
					"lightsail:OpenInstancePublicPorts",
					"lightsail:PeerVpc",
					"lightsail:RebootInstance",
					"lightsail:ReleaseStaticIp",
					"lightsail:StartInstance",
					"lightsail:StopInstance",
					"lightsail:UnpeerVpc",
					"lightsail:UpdateDomainEntry",
					"rds:AddSourceIdentifierToSubscription",
					"rds:AddTagsToResource",
					"rds:ApplyPendingMaintenanceAction",
					"rds:AuthorizeDBSecurityGroupIngress",
					"rds:CopyDBClusterSnapshot",
					"rds:CopyDBParameterGroup",
					"rds:CopyDBSnapshot",
					"rds:CopyOptionGroup",
					"rds:CreateDBCluster",
					"rds:CreateDBClusterParameterGroup",
					"rds:CreateDBClusterSnapshot",
					"rds:CreateDBInstance",
					"rds:CreateDBInstanceReadReplica",
					"rds:CreateDBParameterGroup",
					"rds:CreateDBSecurityGroup",
					"rds:CreateDBSnapshot",
					"rds:CreateDBSubnetGroup",
					"rds:CreateEventSubscription",
					"rds:CreateOptionGroup",
					"rds:DeleteDBCluster",
					"rds:DeleteDBClusterParameterGroup",
					"rds:DeleteDBClusterSnapshot",
					"rds:DeleteDBInstance",
					"rds:DeleteDBParameterGroup",
					"rds:DeleteDBSecurityGroup",
					"rds:DeleteDBSnapshot",
					"rds:DeleteDBSubnetGroup",
					"rds:DeleteEventSubscription",
					"rds:DeleteOptionGroup",
					"rds:DescribeAccountAttributes",
					"rds:DescribeCertificates",
					"rds:DescribeDBClusterParameterGroups",
					"rds:DescribeDBClusterParameters",
					"rds:DescribeDBClusters",
					"rds:DescribeDBClusterSnapshotAttributes",
					"rds:DescribeDBEngineVersions",
					"rds:DescribeDBInstances",
					"rds:DescribeDBLogFiles",
					"rds:DescribeDBParameterGroups",
					"rds:DescribeDBParameters",
					"rds:DescribeDBSecurityGroups",
					"rds:DescribeDBSnapshotAttributes",
					"rds:DescribeDBSnapshots",
					"rds:DescribeDBSubnetGroups",
					"rds:DescribeEngineDefaultClusterParameters",
					"rds:DescribeEngineDefaultParameters",
					"rds:DescribeEventCategories",
					"rds:DescribeEvents",
					"rds:DescribeEventSubscriptions",
					"rds:DescribeOptionGroupOptions",
					"rds:DescribeOptionGroups",
					"rds:DescribeOrderableDBInstanceOptions",
					"rds:DescribePendingMaintenanceActions",
					"rds:DescribeReservedDBInstances",
					"rds:DescribeReservedDBInstancesOfferings",
					"rds:DownloadCompleteDBLogFile",
					"rds:DownloadDBLogFilePortion",
					"rds:FailoverDBCluster",
					"rds:ListTagsForResource",
					"rds:ModifyDBCluster",
					"rds:ModifyDBClusterParameterGroup",
					"rds:ModifyDBClusterSnapshotAttribute",
					"rds:ModifyDBInstance",
					"rds:ModifyDBParameterGroup",
					"rds:ModifyDBSnapshotAttribute",
					"rds:ModifyDBSubnetGroup",
					"rds:ModifyEventSubscription",
					"rds:ModifyOptionGroup",
					"rds:PromoteReadReplica",
					"rds:PromoteReadReplicaDBCluster",
					"rds:PurchaseReservedDBInstancesOffering",
					"rds:RebootDBInstance",
					"rds:RemoveSourceIdentifierFromSubscription",
					"rds:RemoveTagsFromResource",
					"rds:ResetDBClusterParameterGroup",
					"rds:ResetDBParameterGroup",
					"rds:RestoreDBClusterFromS3",
					"rds:RestoreDBClusterFromSnapshot",
					"rds:RestoreDBClusterToPointInTime",
					"rds:RestoreDBInstanceFromDBSnapshot",
					"rds:RestoreDBInstanceToPointInTime",
					"rds:RevokeDBSecurityGroupIngress",
					"rds:DescribeDBClusterSnapshots",
					"rds:StartDBInstance",
					"rds:StopDBInstance",
					"athena:BatchGetNamedQuery",
					"athena:BatchGetQueryExecution",
					"athena:CreateNamedQuery",
					"athena:DeleteNamedQuery",
					"athena:GetNamedQuery",
					"athena:GetQueryExecution",
					"athena:GetQueryResults",
					"athena:ListNamedQueries",
					"athena:ListQueryExecutions",
					"athena:StartQueryExecution",
					"athena:StopQueryExecution",
					"codepipeline:AcknowledgeJob",
					"codepipeline:AcknowledgeThirdPartyJob",
					"codepipeline:CreateCustomActionType",
					"codepipeline:CreatePipeline",
					"codepipeline:DeleteCustomActionType",
					"codepipeline:DeletePipeline",
					"codepipeline:DeleteWebhook",
					"codepipeline:DeregisterWebhookWithThirdParty",
					"codepipeline:DisableStageTransition",
					"codepipeline:EnableStageTransition",
					"codepipeline:GetJobDetails",
					"codepipeline:GetPipeline",
					"codepipeline:GetPipelineExecution",
					"codepipeline:GetPipelineState",
					"codepipeline:GetThirdPartyJobDetails",
					"codepipeline:ListActionTypes",
					"codepipeline:ListPipelineExecutions",
					"codepipeline:ListPipelines",
					"codepipeline:ListWebhooks",
					"codepipeline:PollForJobs",
					"codepipeline:PollForThirdPartyJobs",
					"codepipeline:PutActionRevision",
					"codepipeline:PutApprovalResult",
					"codepipeline:PutJobFailureResult",
					"codepipeline:PutJobSuccessResult",
					"codepipeline:PutThirdPartyJobFailureResult",
					"codepipeline:PutThirdPartyJobSuccessResult",
					"codepipeline:PutWebhook",
					"codepipeline:RegisterWebhookWithThirdParty",
					"codepipeline:RetryStageExecution",
					"codepipeline:StartPipelineExecution",
					"codepipeline:UpdatePipeline",
					"states:CreateActivity",
					"states:CreateStateMachine",
					"states:DeleteActivity",
					"states:DeleteStateMachine",
					"states:DescribeActivity",
					"states:DescribeExecution",
					"states:DescribeStateMachine",
					"states:GetActivityTask",
					"states:GetExecutionHistory",
					"states:ListActivities",
					"states:ListExecutions",
					"states:ListStateMachines",
					"states:SendTaskFailure",
					"states:SendTaskHeartbeat",
					"states:SendTaskSuccess",
					"states:StartExecution",
					"states:StopExecution",
					"ecr:BatchCheckLayerAvailability",
					"ecr:BatchDeleteImage",
					"ecr:BatchGetImage",
					"ecr:CompleteLayerUpload",
					"ecr:CreateRepository",
					"ecr:DeleteRepository",
					"ecr:DeleteRepositoryPolicy",
					"ecr:DescribeImages",
					"ecr:DescribeRepositories",
					"ecr:GetAuthorizationToken",
					"ecr:GetDownloadUrlForLayer",
					"ecr:GetRepositoryPolicy",
					"ecr:InitiateLayerUpload",
					"ecr:ListImages",
					"ecr:PutImage",
					"ecr:SetRepositoryPolicy",
					"ecr:UploadLayerPart",
					"machinelearning:CreateBatchPrediction",
					"machinelearning:CreateDataSourceFromRDS",
					"machinelearning:CreateDataSourceFromRedshift",
					"machinelearning:CreateDataSourceFromS3",
					"machinelearning:CreateEvaluation",
					"machinelearning:CreateMLModel",
					"machinelearning:CreateRealtimeEndpoint",
					"machinelearning:DeleteBatchPrediction",
					"machinelearning:DeleteDataSource",
					"machinelearning:DeleteEvaluation",
					"machinelearning:DeleteMLModel",
					"machinelearning:DeleteRealtimeEndpoint",
					"machinelearning:DescribeBatchPredictions",
					"machinelearning:DescribeDataSources",
					"machinelearning:DescribeEvaluations",
					"machinelearning:DescribeMLModels",
					"machinelearning:GetBatchPrediction",
					"machinelearning:GetDataSource",
					"machinelearning:GetEvaluation",
					"machinelearning:GetMLModel",
					"machinelearning:Predict",
					"machinelearning:UpdateBatchPrediction",
					"machinelearning:UpdateDataSource",
					"machinelearning:UpdateEvaluation",
					"machinelearning:UpdateMLModel",
					"kms:CancelKeyDeletion",
					"kms:CreateAlias",
					"kms:CreateGrant",
					"kms:CreateKey",
					"kms:Decrypt",
					"kms:DeleteAlias",
					"kms:DescribeKey",
					"kms:DisableKey",
					"kms:DisableKeyRotation",
					"kms:EnableKey",
					"kms:EnableKeyRotation",
					"kms:Encrypt",
					"kms:GenerateRandom",
					"kms:GenerateDataKey",
					"kms:GenerateDataKeyWithoutPlaintext",
					"kms:GetKeyPolicy",
					"kms:GetKeyRotationStatus",
					"kms:ListAliases",
					"kms:ListGrants",
					"kms:ListKeyPolicies",
					"kms:ListKeys",
					"kms:ListResourceTags",
					"kms:ListRetirableGrants",
					"kms:PutKeyPolicy",
					"kms:ReEncryptFrom",
					"kms:ReEncryptTo",
					"kms:RetireGrant",
					"kms:RevokeGrant",
					"kms:ScheduleKeyDeletion",
					"kms:TagResource",
					"kms:UntagResource",
					"kms:UpdateAlias",
					"kms:UpdateKeyDescription",
					"codebuild:BatchGetBuilds",
					"codebuild:BatchGetProjects",
					"codebuild:CreateProject",
					"codebuild:DeleteProject",
					"codebuild:ListBuilds",
					"codebuild:ListBuildsForProject",
					"codebuild:ListCuratedEnvironmentImages",
					"codebuild:ListConnectedOAuthAccounts",
					"codebuild:ListProjects",
					"codebuild:ListRepositories",
					"codebuild:PersistOAuthToken",
					"codebuild:StartBuild",
					"codebuild:StopBuild",
					"codebuild:UpdateProject",
					"gamelift:CreateAlias",
					"gamelift:CreateBuild",
					"gamelift:CreateFleet",
					"gamelift:CreateGameSession",
					"gamelift:CreatePlayerSession",
					"gamelift:CreatePlayerSessions",
					"gamelift:DeleteAlias",
					"gamelift:DeleteBuild",
					"gamelift:DeleteFleet",
					"gamelift:DescribeAlias",
					"gamelift:DescribeBuild",
					"gamelift:DescribeEC2InstanceLimits",
					"gamelift:DescribeFleetAttributes",
					"gamelift:DescribeFleetCapacity",
					"gamelift:DescribeFleetEvents",
					"gamelift:DescribeFleetPortSettings",
					"gamelift:DescribeFleetUtilization",
					"gamelift:DescribeGameSessions",
					"gamelift:DescribePlayerSessions",
					"gamelift:GetGameSessionLogUrl",
					"gamelift:ListAliases",
					"gamelift:ListBuilds",
					"gamelift:ListFleets",
					"gamelift:RequestUploadCredentials",
					"gamelift:ResolveAlias",
					"gamelift:UpdateAlias",
					"gamelift:UpdateBuild",
					"gamelift:UpdateFleetAttributes",
					"gamelift:UpdateFleetCapacity",
					"gamelift:UpdateFleetPortSettings",
					"gamelift:UpdateGameSession",
					"workdocs:ActivateUser",
					"workdocs:AddUserToGroup",
					"workdocs:CheckAlias",
					"workdocs:CreateInstance",
					"workdocs:DeactivateUser",
					"workdocs:DeleteInstance",
					"workdocs:DeregisterDirectory",
					"workdocs:DescribeAvailableDirectories",
					"workdocs:DescribeInstances",
					"workdocs:RegisterDirectory",
					"workdocs:RemoveUserFromGroup",
					"workdocs:UpdateInstanceAlias",
					"cloudhsm:CreateLunaClient",
					"cloudhsm:CreateHapg",
					"cloudhsm:CreateHsm",
					"cloudhsm:DeleteLunaClient",
					"cloudhsm:DeleteHapg",
					"cloudhsm:DeleteHsm",
					"cloudhsm:DescribeLunaClient",
					"cloudhsm:DescribeHapg",
					"cloudhsm:DescribeHsm",
					"cloudhsm:GetConfig",
					"cloudhsm:ListAvailableZones",
					"cloudhsm:ListLunaClients",
					"cloudhsm:ListHapgs",
					"cloudhsm:ListHsms",
					"cloudhsm:ModifyLunaClient",
					"cloudhsm:ModifyHapg",
					"cloudhsm:ModifyHsm",
					"s3:AbortMultipartUpload",
					"s3:BypassGovernanceRetention",
					"s3:CreateBucket",
					"s3:DeleteBucket",
					"s3:DeleteBucketPolicy",
					"s3:DeleteBucketWebsite",
					"s3:DeleteObject",
					"s3:DeleteObjectVersion",
					"s3:GetAccelerateConfiguration",
					"s3:GetBucketAcl",
					"s3:GetBucketCORS",
					"s3:GetBucketLocation",
					"s3:GetBucketLogging",
					"s3:GetBucketNotification",
					"s3:GetBucketObjectLockConfiguration",
					"s3:GetBucketPolicy",
					"s3:GetBucketRequestPayment",
					"s3:GetBucketTagging",
					"s3:GetBucketVersioning",
					"s3:GetBucketWebsite",
					"s3:GetEncryptionConfiguration",
					"s3:GetLifecycleConfiguration",
					"s3:GetObject",
					"s3:GetObjectAcl",
					"s3:GetObjectLegalHold",
					"s3:GetObjectRetention",
					"s3:GetObjectTagging",
					"s3:GetObjectTorrent",
					"s3:GetObjectVersion",
					"s3:GetObjectVersionAcl",
					"s3:GetObjectVersionTorrent",
					"s3:GetReplicationConfiguration",
					"s3:ListAllMyBuckets",
					"s3:ListBucket",
					"s3:ListBucketMultipartUploads",
					"s3:ListBucketVersions",
					"s3:ListMultipartUploadParts",
					"s3:PutAccelerateConfiguration",
					"s3:PutBucketAcl",
					"s3:PutBucketCORS",
					"s3:PutBucketLogging",
					"s3:PutBucketNotification",
					"s3:PutBucketObjectLockConfiguration",
					"s3:PutBucketPolicy",
					"s3:PutBucketRequestPayment",
					"s3:PutBucketTagging",
					"s3:PutBucketVersioning",
					"s3:PutBucketWebsite",
					"s3:PutEncryptionConfiguration",
					"s3:PutLifecycleConfiguration",
					"s3:PutObject",
					"s3:PutObjectAcl",
					"s3:PutObjectLegalHold",
					"s3:PutObjectRetention",
					"s3:PutObjectTagging",
					"s3:PutObjectVersionAcl",
					"s3:PutReplicationConfiguration",
					"s3:ReplicateDelete",
					"s3:ReplicateObject",
					"s3:RestoreObject",
					"xray:BatchGetTraces",
					"xray:GetServiceGraph",
					"xray:GetTraceGraph",
					"xray:GetTraceSummaries",
					"xray:PutTelemetryRecords",
					"xray:PutTraceSegments",
					"ce:GetTags",
					"ce:GetDimensionValues",
					"ce:GetReservationCoverage",
					"ce:GetReservationUtilization",
					"ce:GetCostAndUsage",
					"lambda:AddPermission",
					"lambda:CreateAlias",
					"lambda:CreateEventSourceMapping",
					"lambda:CreateFunction",
					"lambda:DeleteAlias",
					"lambda:DeleteEventSourceMapping",
					"lambda:DeleteFunction",
					"lambda:GetAlias",
					"lambda:GetEventSourceMapping",
					"lambda:GetFunction",
					"lambda:GetFunctionConfiguration",
					"lambda:GetPolicy",
					"lambda:InvokeFunction",
					"lambda:InvokeAsync",
					"lambda:ListAliases",
					"lambda:ListEventSourceMappings",
					"lambda:ListFunctions",
					"lambda:ListVersionsByFunction",
					"lambda:PublishVersion",
					"lambda:RemovePermission",
					"lambda:UpdateAlias",
					"lambda:UpdateEventSourceMapping",
					"lambda:UpdateFunctionCode",
					"lambda:UpdateFunctionConfiguration",
					"tag:AddResourceTags",
					"tag:GetResources",
					"tag:GetTagKeys",
					"tag:GetTagValues",
					"tag:RemoveResourceTags",
					"tag:TagResources",
					"tag:UntagResources",
					"snowball:CancelCluster",
					"snowball:CancelJob",
					"snowball:CreateAddress",
					"snowball:CreateCluster",
					"snowball:CreateJob",
					"snowball:DescribeAddress",
					"snowball:DescribeAddresses",
					"snowball:DescribeCluster",
					"snowball:DescribeJob",
					"snowball:GetJobManifest",
					"snowball:GetJobUnlockCode",
					"snowball:GetSnowballUsage",
					"snowball:ListClusterJobs",
					"snowball:ListClusters",
					"snowball:ListJobs",
					"snowball:UpdateCluster",
					"snowball:UpdateJob",
					"sns:AddPermission",
					"sns:ConfirmSubscription",
					"sns:CreatePlatformApplication",
					"sns:CreatePlatformEndpoint",
					"sns:CreateTopic",
					"sns:DeleteEndpoint",
					"sns:DeletePlatformApplication",
					"sns:DeleteTopic",
					"sns:GetEndpointAttributes",
					"sns:GetPlatformApplicationAttributes",
					"sns:GetSubscriptionAttributes",
					"sns:GetTopicAttributes",
					"sns:ListEndpointsByPlatformApplication",
					"sns:ListPlatformApplications",
					"sns:ListSubscriptions",
					"sns:ListSubscriptionsByTopic",
					"sns:ListTopics",
					"sns:Publish",
					"sns:RemovePermission",
					"sns:SetEndpointAttributes",
					"sns:SetPlatformApplicationAttributes",
					"sns:SetSubscriptionAttributes",
					"sns:SetTopicAttributes",
					"sns:Subscribe",
					"sns:Unsubscribe",
					"secretsmanager:CancelRotateSecret",
					"secretsmanager:CreateSecret",
					"secretsmanager:DeleteResourcePolicy",
					"secretsmanager:DeleteSecret",
					"secretsmanager:DescribeSecret",
					"secretsmanager:GetRandomPassword",
					"secretsmanager:GetResourcePolicy",
					"secretsmanager:GetSecretValue",
					"secretsmanager:ListSecrets",
					"secretsmanager:ListSecretVersionIds",
					"secretsmanager:PutResourcePolicy",
					"secretsmanager:PutSecretValue",
					"secretsmanager:RestoreSecret",
					"secretsmanager:RotateSecret",
					"secretsmanager:TagResource",
					"secretsmanager:UntagResource",
					"secretsmanager:UpdateSecret",
					"secretsmanager:UpdateSecretVersionStage",
					"ecs:CreateCluster",
					"ecs:CreateService",
					"ecs:DeleteCluster",
					"ecs:DeleteService",
					"ecs:DeregisterContainerInstance",
					"ecs:DeregisterTaskDefinition",
					"ecs:DescribeClusters",
					"ecs:DescribeContainerInstances",
					"ecs:DescribeServices",
					"ecs:DescribeTaskDefinition",
					"ecs:DescribeTasks",
					"ecs:DiscoverPollEndpoint",
					"ecs:ListClusters",
					"ecs:ListContainerInstances",
					"ecs:ListServices",
					"ecs:ListTaskDefinitionFamilies",
					"ecs:ListTaskDefinitions",
					"ecs:ListTasks",
					"ecs:Poll",
					"ecs:RegisterContainerInstance",
					"ecs:RegisterTaskDefinition",
					"ecs:RunTask",
					"ecs:StartTask",
					"ecs:StopTask",
					"ecs:StartTelemetrySession",
					"ecs:SubmitContainerStateChange",
					"ecs:SubmitTaskStateChange",
					"ecs:UpdateContainerAgent",
					"ecs:UpdateService",
					"ecs:UpdateContainerInstancesState",
					"elastictranscoder:CancelJob",
					"elastictranscoder:CreateJob",
					"elastictranscoder:CreatePipeline",
					"elastictranscoder:CreatePreset",
					"elastictranscoder:DeletePipeline",
					"elastictranscoder:DeletePreset",
					"elastictranscoder:ListJobsByPipeline",
					"elastictranscoder:ListJobsByStatus",
					"elastictranscoder:ListPipelines",
					"elastictranscoder:ListPresets",
					"elastictranscoder:ReadJob",
					"elastictranscoder:ReadPipeline",
					"elastictranscoder:ReadPreset",
					"elastictranscoder:TestRole",
					"elastictranscoder:UpdatePipeline",
					"elastictranscoder:UpdatePipelineNotifications",
					"elastictranscoder:UpdatePipelineStatus",
					"codestar:AssociateTeamMember",
					"codestar:CreateProject",
					"codestar:CreateUserProfile",
					"codestar:DeleteExtendedAccess",
					"codestar:DeleteProject",
					"codestar:DeleteUserProfile",
					"codestar:DescribeProject",
					"codestar:DescribeUserProfile",
					"codestar:DisassociateTeamMember",
					"codestar:GetExtendedAccess",
					"codestar:ListProjects",
					"codestar:ListResources",
					"codestar:ListTeamMembers",
					"codestar:ListUserProfiles",
					"codestar:PutExtendedAccess",
					"codestar:UpdateProject",
					"codestar:UpdateTeamMember",
					"codestar:UpdateUserProfile",
					"codestar:VerifyServiceRole",
					"datapipeline:ActivatePipeline",
					"datapipeline:AddTags",
					"datapipeline:CreatePipeline",
					"datapipeline:DeactivatePipeline",
					"datapipeline:DeletePipeline",
					"datapipeline:DescribeObjects",
					"datapipeline:DescribePipelines",
					"datapipeline:EvaluateExpression",
					"datapipeline:GetAccountLimits",
					"datapipeline:GetPipelineDefinition",
					"datapipeline:ListPipelines",
					"datapipeline:PollForTask",
					"datapipeline:PutAccountLimits",
					"datapipeline:PutPipelineDefinition",
					"datapipeline:QueryObjects",
					"datapipeline:RemoveTags",
					"datapipeline:ReportTaskProgress",
					"datapipeline:ReportTaskRunnerHeartbeat",
					"datapipeline:SetStatus",
					"datapipeline:SetTaskStatus",
					"datapipeline:ValidatePipelineDefinition",
					"cur:DeleteReportDefinition",
					"cur:DescribeReportDefinitions",
					"cur:PutReportDefinition",
					"iot:AcceptCertificateTransfer",
					"iot:AttachPrincipalPolicy",
					"iot:AttachThingPrincipal",
					"iot:CancelCertificateTransfer",
					"iot:Connect",
					"iot:CreateCertificateFromCsr",
					"iot:CreateKeysAndCertificate",
					"iot:CreatePolicy",
					"iot:CreatePolicyVersion",
					"iot:CreateThing",
					"iot:CreateTopicRule",
					"iot:DeleteCertificate",
					"iot:DeletePolicy",
					"iot:DeletePolicyVersion",
					"iot:DeleteThing",
					"iot:DeleteThingShadow",
					"iot:DeleteTopicRule",
					"iot:DescribeCertificate",
					"iot:DescribeEndpoint",
					"iot:DescribeThing",
					"iot:DetachPrincipalPolicy",
					"iot:DetachThingPrincipal",
					"iot:GetLoggingOptions",
					"iot:GetPolicy",
					"iot:GetPolicyVersion",
					"iot:GetThingShadow",
					"iot:GetTopicRule",
					"iot:ListCertificates",
					"iot:ListPolicies",
					"iot:ListPolicyVersions",
					"iot:ListPrincipalPolicies",
					"iot:ListPrincipalThings",
					"iot:ListThingPrincipals",
					"iot:ListThings",
					"iot:ListTopicRules",
					"iot:Publish",
					"iot:Receive",
					"iot:RejectCertificateTransfer",
					"iot:ReplaceTopicRule",
					"iot:SetDefaultPolicyVersion",
					"iot:SetLoggingOptions",
					"iot:Subscribe",
					"iot:TransferCertificate",
					"iot:UpdateCertificate",
					"iot:UpdateThing",
					"iot:UpdateThingShadow",
					"autoscaling:DescribeAccountLimits",
					"autoscaling:DescribeAdjustmentTypes",
					"autoscaling:DescribeAutoScalingGroups",
					"autoscaling:DescribeAutoScalingInstances",
					"autoscaling:DescribeAutoScalingNotificationTypes",
					"autoscaling:DescribeLaunchConfigurations",
					"autoscaling:DescribeLifecycleHooks",
					"autoscaling:DescribeLifecycleHookTypes",
					"autoscaling:DescribeLoadBalancers",
					"autoscaling:DescribeLoadBalancerTargetGroups",
					"autoscaling:DescribeMetricCollectionTypes",
					"autoscaling:DescribeNotificationConfigurations",
					"autoscaling:DescribePolicies",
					"autoscaling:DescribeScalingActivities",
					"autoscaling:DescribeScalingProcessTypes",
					"autoscaling:DescribeScheduledActions",
					"autoscaling:DescribeTags",
					"autoscaling:DescribeTerminationPolicyTypes",
					"autoscaling:AttachInstances",
					"autoscaling:AttachLoadBalancers",
					"autoscaling:AttachLoadBalancerTargetGroups",
					"autoscaling:CompleteLifecycleAction",
					"autoscaling:CreateAutoScalingGroup",
					"autoscaling:CreateLaunchConfiguration",
					"autoscaling:CreateOrUpdateTags",
					"autoscaling:DeleteAutoScalingGroup",
					"autoscaling:DeleteLaunchConfiguration",
					"autoscaling:DeleteLifecycleHook",
					"autoscaling:DeleteNotificationConfiguration",
					"autoscaling:DeletePolicy",
					"autoscaling:DeleteScheduledAction",
					"autoscaling:DeleteTags",
					"autoscaling:DetachInstances",
					"autoscaling:DetachLoadBalancers",
					"autoscaling:DetachLoadBalancerTargetGroups",
					"autoscaling:DisableMetricsCollection",
					"autoscaling:EnableMetricsCollection",
					"autoscaling:EnterStandby",
					"autoscaling:ExecutePolicy",
					"autoscaling:ExitStandby",
					"autoscaling:PutLifecycleHook",
					"autoscaling:PutNotificationConfiguration",
					"autoscaling:PutScalingPolicy",
					"autoscaling:PutScheduledUpdateGroupAction",
					"autoscaling:RecordLifecycleActionHeartbeat",
					"autoscaling:ResumeProcesses",
					"autoscaling:SetDesiredCapacity",
					"autoscaling:SetInstanceHealth",
					"autoscaling:SetInstanceProtection",
					"autoscaling:SuspendProcesses",
					"autoscaling:TerminateInstanceInAutoScalingGroup",
					"autoscaling:UpdateAutoScalingGroup",
					"logs:CancelExportTask",
					"logs:CreateExportTask",
					"logs:CreateLogGroup",
					"logs:CreateLogStream",
					"logs:DeleteDestination",
					"logs:DeleteLogGroup",
					"logs:DeleteLogStream",
					"logs:DeleteMetricFilter",
					"logs:DeleteRetentionPolicy",
					"logs:DeleteSubscriptionFilter",
					"logs:DescribeDestinations",
					"logs:DescribeExportTasks",
					"logs:DescribeLogGroups",
					"logs:DescribeLogStreams",
					"logs:DescribeMetricFilters",
					"logs:DescribeSubscriptionFilters",
					"logs:FilterLogEvents",
					"logs:GetLogEvents",
					"logs:ListTagsLogGroup",
					"logs:PutDestination",
					"logs:PutDestinationPolicy",
					"logs:PutLogEvents",
					"logs:PutMetricFilter",
					"logs:PutRetentionPolicy",
					"logs:PutSubscriptionFilter",
					"logs:TestMetricFilter",
					"elasticmapreduce:AddInstanceFleet",
					"elasticmapreduce:AddInstanceGroups",
					"elasticmapreduce:AddJobFlowSteps",
					"elasticmapreduce:AddTags",
					"elasticmapreduce:CancelSteps",
					"elasticmapreduce:CreateSecurityConfiguration",
					"elasticmapreduce:DeleteSecurityConfiguration",
					"elasticmapreduce:DescribeCluster",
					"elasticmapreduce:DescribeJobFlows",
					"elasticmapreduce:DescribeSecurityConfiguration",
					"elasticmapreduce:DescribeStep",
					"elasticmapreduce:ListBootstrapActions",
					"elasticmapreduce:ListClusters",
					"elasticmapreduce:ListInstanceFleets",
					"elasticmapreduce:ListInstanceGroups",
					"elasticmapreduce:ListInstances",
					"elasticmapreduce:ListSecurityConfigurations",
					"elasticmapreduce:ListSteps",
					"elasticmapreduce:ModifyInstanceFleet",
					"elasticmapreduce:ModifyInstanceGroups",
					"elasticmapreduce:PutAutoScalingPolicy",
					"elasticmapreduce:RemoveAutoScalingPolicy",
					"elasticmapreduce:RemoveTags",
					"elasticmapreduce:RunJobFlow",
					"elasticmapreduce:SetTerminationProtection",
					"elasticmapreduce:SetVisibleToAllUsers",
					"elasticmapreduce:TerminateJobFlows",
					"polly:DeleteLexicon",
					"polly:DescribeVoices",
					"polly:GetLexicon",
					"polly:ListLexicons",
					"polly:PutLexicon",
					"polly:SynthesizeSpeech",
					"sdb:BatchDeleteAttributes",
					"sdb:BatchPutAttributes",
					"sdb:CreateDomain",
					"sdb:DeleteAttributes",
					"sdb:DeleteDomain",
					"sdb:DomainMetadata",
					"sdb:GetAttributes",
					"sdb:ListDomains",
					"sdb:PutAttributes",
					"sdb:Select",
					"elasticloadbalancing:AddTags",
					"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
					"elasticloadbalancing:AttachLoadBalancerToSubnets",
					"elasticloadbalancing:ConfigureHealthCheck",
					"elasticloadbalancing:CreateAppCookieStickinessPolicy",
					"elasticloadbalancing:CreateListener",
					"elasticloadbalancing:CreateLBCookieStickinessPolicy",
					"elasticloadbalancing:CreateLoadBalancer",
					"elasticloadbalancing:CreateLoadBalancerListeners",
					"elasticloadbalancing:CreateLoadBalancerPolicy",
					"elasticloadbalancing:CreateRule",
					"elasticloadbalancing:CreateTargetGroup",
					"elasticloadbalancing:DeleteListener",
					"elasticloadbalancing:DeleteLoadBalancer",
					"elasticloadbalancing:DeleteLoadBalancerListeners",
					"elasticloadbalancing:DeleteLoadBalancerPolicy",
					"elasticloadbalancing:DeleteRule",
					"elasticloadbalancing:DeleteTargetGroup",
					"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
					"elasticloadbalancing:DeregisterTargets",
					"elasticloadbalancing:DescribeInstanceHealth",
					"elasticloadbalancing:DescribeListeners",
					"elasticloadbalancing:DescribeLoadBalancerAttributes",
					"elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
					"elasticloadbalancing:DescribeLoadBalancerPolicies",
					"elasticloadbalancing:DescribeLoadBalancers",
					"elasticloadbalancing:DescribeRules",
					"elasticloadbalancing:DescribeSSLPolicies",
					"elasticloadbalancing:DescribeTags",
					"elasticloadbalancing:DescribeTargetGroupAttributes",
					"elasticloadbalancing:DescribeTargetGroups",
					"elasticloadbalancing:DescribeTargetHealth",
					"elasticloadbalancing:DetachLoadBalancerFromSubnets",
					"elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
					"elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
					"elasticloadbalancing:ModifyListener",
					"elasticloadbalancing:ModifyLoadBalancerAttributes",
					"elasticloadbalancing:ModifyRule",
					"elasticloadbalancing:ModifyTargetGroup",
					"elasticloadbalancing:ModifyTargetGroupAttributes",
					"elasticloadbalancing:RegisterTargets",
					"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
					"elasticloadbalancing:RemoveTags",
					"elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
					"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
					"elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
					"elasticloadbalancing:SetRulePriorities",
					"elasticloadbalancing:SetSecurityGroups",
					"elasticloadbalancing:SetSubnets",
					"budgets:ViewBudget",
					"budgets:ModifyBudget",
					"storagegateway:ActivateGateway",
					"storagegateway:AddCache",
					"storagegateway:AddTagsToResource",
					"storagegateway:AddUploadBuffer",
					"storagegateway:AddWorkingStorage",
					"storagegateway:CancelArchival",
					"storagegateway:CancelRetrieval",
					"storagegateway:CreateCachediSCSIVolume",
					"storagegateway:CreateSnapshot",
					"storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
					"storagegateway:CreateStorediSCSIVolume",
					"storagegateway:CreateTapes",
					"storagegateway:DeleteBandwidthRateLimit",
					"storagegateway:DeleteChapCredentials",
					"storagegateway:DeleteGateway",
					"storagegateway:DeleteSnapshotSchedule",
					"storagegateway:DeleteTape",
					"storagegateway:DeleteTapeArchive",
					"storagegateway:DeleteVolume",
					"storagegateway:DescribeBandwidthRateLimit",
					"storagegateway:DescribeCache",
					"storagegateway:DescribeCachediSCSIVolumes",
					"storagegateway:DescribeChapCredentials",
					"storagegateway:DescribeGatewayInformation",
					"storagegateway:DescribeMaintenanceStartTime",
					"storagegateway:DescribeSnapshotSchedule",
					"storagegateway:DescribeStorediSCSIVolumes",
					"storagegateway:DescribeTapeArchives",
					"storagegateway:DescribeTapeRecoveryPoints",
					"storagegateway:DescribeTapes",
					"storagegateway:DescribeUploadBuffer",
					"storagegateway:DescribeVTLDevices",
					"storagegateway:DescribeWorkingStorage",
					"storagegateway:DisableGateway",
					"storagegateway:ListGateways",
					"storagegateway:ListLocalDisks",
					"storagegateway:ListTagsForResource",
					"storagegateway:ListVolumeInitiators",
					"storagegateway:ListVolumeRecoveryPoints",
					"storagegateway:ListVolumes",
					"storagegateway:RemoveTagsFromResource",
					"storagegateway:ResetCache",
					"storagegateway:RetrieveTapeArchive",
					"storagegateway:RetrieveTapeRecoveryPoint",
					"storagegateway:ShutdownGateway",
					"storagegateway:StartGateway",
					"storagegateway:UpdateBandwidthRateLimit",
					"storagegateway:UpdateChapCredentials",
					"storagegateway:UpdateGatewayInformation",
					"storagegateway:UpdateGatewaySoftwareNow",
					"storagegateway:UpdateMaintenanceStartTime",
					"storagegateway:UpdateSnapshotSchedule",
					"storagegateway:UpdateVTLDeviceType",
					"firehose:CreateDeliveryStream",
					"firehose:DeleteDeliveryStream",
					"firehose:DescribeDeliveryStream",
					"firehose:ListDeliveryStreams",
					"firehose:PutRecord",
					"firehose:PutRecordBatch",
					"firehose:UpdateDestination",
					"ssm:AddTagsToResource",
					"ssm:CancelCommand",
					"ssm:CreateActivation",
					"ssm:CreateAssociation",
					"ssm:CreateAssociationBatch",
					"ssm:CreateDocument",
					"ssm:CreateMaintenanceWindow",
					"ssm:CreatePatchBaseline",
					"ssm:CreateResourceDataSync",
					"ssm:DeleteActivation",
					"ssm:DeleteAssociation",
					"ssm:DeleteDocument",
					"ssm:DeleteMaintenanceWindow",
					"ssm:DeleteParameter",
					"ssm:DeleteParameters",
					"ssm:DeletePatchBaseline",
					"ssm:DeleteResourceDataSync",
					"ssm:DeregisterManagedInstance",
					"ssm:DeregisterPatchBaselineForPatchGroup",
					"ssm:DeregisterTargetFromMaintenanceWindow",
					"ssm:DeregisterTaskFromMaintenanceWindow",
					"ssm:DescribeActivations",
					"ssm:DescribeAssociation",
					"ssm:DescribeAvailablePatches",
					"ssm:DescribeDocument",
					"ssm:DescribeDocumentParameters",
					"ssm:DescribeDocumentPermission",
					"ssm:DescribeEffectivePatchesForPatchBaseline",
					"ssm:DescribeInstanceInformation",
					"ssm:DescribeInstancePatchStates",
					"ssm:DescribeInstancePatchStatesForPatchGroup",
					"ssm:DescribeInstancePatches",
					"ssm:DescribeInstanceProperties",
					"ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
					"ssm:DescribeMaintenanceWindowExecutionTasks",
					"ssm:DescribeMaintenanceWindowExecutions",
					"ssm:DescribeMaintenanceWindowTargets",
					"ssm:DescribeMaintenanceWindowTasks",
					"ssm:DescribeMaintenanceWindows",
					"ssm:DescribeParameters",
					"ssm:DescribePatchBaselines",
					"ssm:DescribePatchGroupState",
					"ssm:DescribePatchGroups",
					"ssm:DescribeSessions",
					"ssm:GetAutomationExecution",
					"ssm:GetConnectionStatus",
					"ssm:GetDefaultPatchBaseline",
					"ssm:GetDeployablePatchSnapshotForInstance",
					"ssm:GetDocument",
					"ssm:GetMaintenanceWindow",
					"ssm:GetMaintenanceWindowExecution",
					"ssm:GetMaintenanceWindowExecutionTask",
					"ssm:GetMaintenanceWindowExecutionTaskInvocation",
					"ssm:GetMaintenanceWindowTask",
					"ssm:GetManifest",
					"ssm:GetParameter",
					"ssm:GetParameterHistory",
					"ssm:GetParameters",
					"ssm:GetParametersByPath",
					"ssm:GetPatchBaseline",
					"ssm:GetPatchBaselineForPatchGroup",
					"ssm:ListAssociationVersions",
					"ssm:ListAssociations",
					"ssm:ListCommandInvocations",
					"ssm:ListCommands",
					"ssm:ListDocuments",
					"ssm:ListTagsForResource",
					"ssm:ModifyDocumentPermission",
					"ssm:PutComplianceItems",
					"ssm:PutConfigurePackageResult",
					"ssm:PutParameter",
					"ssm:RegisterDefaultPatchBaseline",
					"ssm:RegisterPatchBaselineForPatchGroup",
					"ssm:RegisterTargetWithMaintenanceWindow",
					"ssm:RegisterTaskWithMaintenanceWindow",
					"ssm:RemoveTagsFromResource",
					"ssm:ResumeSession",
					"ssm:SendAutomationSignal",
					"ssm:SendCommand",
					"ssm:StartAutomationExecution",
					"ssm:StartSession",
					"ssm:StopAutomationExecution",
					"ssm:TerminateSession",
					"ssm:UpdateAssociationStatus",
					"ssm:UpdateInstanceInformation",
					"ssm:UpdateMaintenanceWindow",
					"ssm:UpdateMaintenanceWindowTarget",
					"ssm:UpdateMaintenanceWindowTask",
					"ssm:UpdateManagedInstanceRole",
					"ssm:UpdatePatchBaseline",
					"es:AddTags",
					"es:CreateElasticsearchDomain",
					"es:DeleteElasticsearchDomain",
					"es:DescribeElasticsearchDomain",
					"es:DescribeElasticsearchDomains",
					"es:DescribeElasticsearchDomainConfig",
					"es:ListDomainNames",
					"es:ListTags",
					"es:RemoveTags",
					"es:UpdateElasticsearchDomainConfig",
					"es:ESHttpDelete",
					"es:ESHttpGet",
					"es:ESHttpHead",
					"es:ESHttpPost",
					"es:ESHttpPut",
					"devicefarm:CreateDevicePool",
					"devicefarm:CreateProject",
					"devicefarm:CreateUpload",
					"devicefarm:GetDevice",
					"devicefarm:GetDevicePool",
					"devicefarm:GetDevicePoolCompatibility",
					"devicefarm:GetJob",
					"devicefarm:GetProject",
					"devicefarm:GetRun",
					"devicefarm:GetSuite",
					"devicefarm:GetTest",
					"devicefarm:GetUpload",
					"devicefarm:ListArtifacts",
					"devicefarm:ListDevicePools",
					"devicefarm:ListDevices",
					"devicefarm:ListJobs",
					"devicefarm:ListProjects",
					"devicefarm:ListRuns",
					"devicefarm:ListSamples",
					"devicefarm:ListSuites",
					"devicefarm:ListTests",
					"devicefarm:ListUniqueProblems",
					"devicefarm:ListUploads",
					"devicefarm:ScheduleRun",
					"dax:CreateCluster",
					"dax:CreateParameterGroup",
					"dax:CreateSubnetGroup",
					"dax:DecreaseReplicationFactor",
					"dax:DeleteCluster",
					"dax:DeleteParameterGroup",
					"dax:DeleteSubnetGroup",
					"dax:DescribeClusters",
					"dax:DescribeDefaultParameters",
					"dax:DescribeEvents",
					"dax:DescribeParameterGroups",
					"dax:DescribeParameters",
					"dax:DescribeSubnetGroups",
					"dax:IncreaseReplicationFactor",
					"dax:ListTags",
					"dax:RebootNode",
					"dax:TagResource",
					"dax:UntagResource",
					"dax:UpdateCluster",
					"dax:UpdateParameterGroup",
					"dax:UpdateSubnetGroup",
					"acm:AddTagsToCertificate",
					"acm:DeleteCertificate",
					"acm:DescribeCertificate",
					"acm:GetCertificate",
					"acm:ImportCertificate",
					"acm:ListCertificates",
					"acm:ListTagsForCertificate",
					"acm:RemoveTagsFromCertificate",
					"acm:RequestCertificate",
					"acm:ResendValidationEmail",
					"cloudwatch:DeleteAlarms",
					"cloudwatch:DeleteDashboards",
					"cloudwatch:DescribeAlarmHistory",
					"cloudwatch:DescribeAlarms",
					"cloudwatch:DescribeAlarmsForMetric",
					"cloudwatch:DisableAlarmActions",
					"cloudwatch:EnableAlarmActions",
					"cloudwatch:GetDashboard",
					"cloudwatch:GetMetricData",
					"cloudwatch:GetMetricStatistics",
					"cloudwatch:ListDashboards",
					"cloudwatch:ListMetrics",
					"cloudwatch:PutDashboard",
					"cloudwatch:PutMetricAlarm",
					"cloudwatch:PutMetricData",
					"cloudwatch:SetAlarmState",
					"ds:ConnectDirectory",
					"ds:CreateAlias",
					"ds:CreateComputer",
					"ds:CreateConditionalForwarder",
					"ds:CreateDirectory",
					"ds:CreateMicrosoftAD",
					"ds:CreateSnapshot",
					"ds:CreateTrust",
					"ds:DeleteConditionalForwarder",
					"ds:DeleteDirectory",
					"ds:DeleteSnapshot",
					"ds:DeleteTrust",
					"ds:DeregisterEventTopic",
					"ds:DescribeConditionalForwarders",
					"ds:DescribeDirectories",
					"ds:DescribeEventTopics",
					"ds:DescribeSnapshots",
					"ds:DescribeTrusts",
					"ds:DisableRadius",
					"ds:DisableSso",
					"ds:EnableRadius",
					"ds:EnableSso",
					"ds:GetDirectoryLimits",
					"ds:GetSnapshotLimits",
					"ds:RegisterEventTopic",
					"ds:RestoreFromSnapshot",
					"ds:UpdateConditionalForwarder",
					"ds:UpdateRadius",
					"ds:VerifyTrust",
					"workmail:AddMembersToGroup",
					"workmail:CreateGroup",
					"workmail:CreateMailDomain",
					"workmail:CreateMailUser",
					"workmail:CreateOrganization",
					"workmail:DeleteOrganization",
					"workmail:DeleteMailDomain",
					"workmail:DeleteMobileDevice",
					"workmail:DescribeDirectories",
					"workmail:DescribeKmsKeys",
					"workmail:DescribeOrganizations",
					"workmail:DescribeMailDomains",
					"workmail:DescribeMailGroups",
					"workmail:DescribeMailUsers",
					"workmail:DisableMailGroups",
					"workmail:DisableMailUsers",
					"workmail:EnableMailDomain",
					"workmail:EnableMailUsers",
					"workmail:EnableMailGroups",
					"workmail:GetMailDomainDetails",
					"workmail:GetMailGroupDetails",
					"workmail:GetMailUserDetails",
					"workmail:GetMobileDeviceDetails",
					"workmail:GetMobileDevicesForUser",
					"workmail:GetMobilePolicyDetails",
					"workmail:ListMembersInMailGroup",
					"workmail:RemoveMembersFromGroup",
					"workmail:ResetUserPassword",
					"workmail:SearchMembers",
					"workmail:SetAdmin",
					"workmail:SetDefaultMailDomain",
					"workmail:SetMailGroupDetails",
					"workmail:SetMailUserDetails",
					"workmail:SetMobilePolicyDetails",
					"workmail:WipeMobileDevice",
					"elasticbeanstalk:AbortEnvironmentUpdate",
					"elasticbeanstalk:CheckDNSAvailability",
					"elasticbeanstalk:ComposeEnvironments",
					"elasticbeanstalk:CreateApplication",
					"elasticbeanstalk:CreateApplicationVersion",
					"elasticbeanstalk:CreateConfigurationTemplate",
					"elasticbeanstalk:CreateEnvironment",
					"elasticbeanstalk:CreateStorageLocation",
					"elasticbeanstalk:DeleteApplication",
					"elasticbeanstalk:DeleteApplicationVersion",
					"elasticbeanstalk:DeleteConfigurationTemplate",
					"elasticbeanstalk:DeleteEnvironmentConfiguration",
					"elasticbeanstalk:DescribeApplicationVersions",
					"elasticbeanstalk:DescribeApplications",
					"elasticbeanstalk:DescribeConfigurationOptions",
					"elasticbeanstalk:DescribeConfigurationSettings",
					"elasticbeanstalk:DescribeEnvironmentHealth",
					"elasticbeanstalk:DescribeEnvironmentResources",
					"elasticbeanstalk:DescribeEnvironments",
					"elasticbeanstalk:DescribeEvents",
					"elasticbeanstalk:DescribeInstancesHealth",
					"elasticbeanstalk:ListAvailableSolutionStacks",
					"elasticbeanstalk:RebuildEnvironment",
					"elasticbeanstalk:RequestEnvironmentInfo",
					"elasticbeanstalk:RestartAppServer",
					"elasticbeanstalk:RetrieveEnvironmentInfo",
					"elasticbeanstalk:SwapEnvironmentCNAMEs",
					"elasticbeanstalk:TerminateEnvironment",
					"elasticbeanstalk:UpdateApplication",
					"elasticbeanstalk:UpdateApplicationVersion",
					"elasticbeanstalk:UpdateConfigurationTemplate",
					"elasticbeanstalk:UpdateEnvironment",
					"elasticbeanstalk:ValidateConfigurationSettings",
					"mechanicalturk:ApproveAssignment",
					"mechanicalturk:ApproveRejectedAssignment",
					"mechanicalturk:AssignQualification",
					"mechanicalturk:BlockWorker",
					"mechanicalturk:ChangeHITTypeOfHIT",
					"mechanicalturk:CreateHIT",
					"mechanicalturk:CreateQualificationType",
					"mechanicalturk:DisableHIT",
					"mechanicalturk:DisposeHIT",
					"mechanicalturk:DisposeQualificationType",
					"mechanicalturk:ExtendHIT",
					"mechanicalturk:ForceExpireHIT",
					"mechanicalturk:GetAccountBalance",
					"mechanicalturk:GetAssignment",
					"mechanicalturk:GetAssignmentsForHIT",
					"mechanicalturk:GetBlockedWorkers",
					"mechanicalturk:GetBonusPayments",
					"mechanicalturk:GetFileUploadURL",
					"mechanicalturk:GetHIT",
					"mechanicalturk:GetHITsForQualificationType",
					"mechanicalturk:GetQualificationRequests",
					"mechanicalturk:GetQualificationScore",
					"mechanicalturk:GetQualificationType",
					"mechanicalturk:GetQualificationsForQualificationType",
					"mechanicalturk:GetRequesterStatistic",
					"mechanicalturk:GetRequesterWorkerStatistic",
					"mechanicalturk:GetReviewResultsForHIT",
					"mechanicalturk:GetReviewableHITs",
					"mechanicalturk:GrantBonus",
					"mechanicalturk:GrantQualification",
					"mechanicalturk:NotifyWorkers",
					"mechanicalturk:RegisterHITType",
					"mechanicalturk:RejectAssignment",
					"mechanicalturk:RejectQualificationRequest",
					"mechanicalturk:RevokeQualification",
					"mechanicalturk:SearchHITs",
					"mechanicalturk:SearchQualificationTypes",
					"mechanicalturk:SendTestEventNotification",
					"mechanicalturk:SetHITAsReviewing",
					"mechanicalturk:SetHITTypeNotification",
					"mechanicalturk:UnblockWorker",
					"mechanicalturk:UpdateQualificationScore",
					"mechanicalturk:UpdateQualificationType",
					"swf:CancelTimer",
					"swf:CancelWorkflowExecution",
					"swf:CompleteWorkflowExecution",
					"swf:ContinueAsNewWorkflowExecution",
					"swf:CountClosedWorkflowExecutions",
					"swf:CountOpenWorkflowExecutions",
					"swf:CountPendingActivityTasks",
					"swf:CountPendingDecisionTasks",
					"swf:DeprecateActivityType",
					"swf:DeprecateDomain",
					"swf:DeprecateWorkflowType",
					"swf:DescribeActivityType",
					"swf:DescribeDomain",
					"swf:DescribeWorkflowExecution",
					"swf:DescribeWorkflowType",
					"swf:FailWorkflowExecution",
					"swf:GetWorkflowExecutionHistory",
					"swf:ListActivityTypes",
					"swf:ListClosedWorkflowExecutions",
					"swf:ListDomains",
					"swf:ListOpenWorkflowExecutions",
					"swf:ListWorkflowTypes",
					"swf:PollForActivityTask",
					"swf:PollForDecisionTask",
					"swf:RecordActivityTaskHeartbeat",
					"swf:RecordMarker",
					"swf:RegisterActivityType",
					"swf:RegisterDomain",
					"swf:RegisterWorkflowType",
					"swf:RequestCancelActivityTask",
					"swf:RequestCancelExternalWorkflowExecution",
					"swf:RequestCancelWorkflowExecution",
					"swf:RespondActivityTaskCanceled",
					"swf:RespondActivityTaskCompleted",
					"swf:RespondActivityTaskFailed",
					"swf:RespondDecisionTaskCompleted",
					"swf:ScheduleActivityTask",
					"swf:SignalExternalWorkflowExecution",
					"swf:SignalWorkflowExecution",
					"swf:StartChildWorkflowExecution",
					"swf:StartTimer",
					"swf:StartWorkflowExecution",
					"swf:TerminateWorkflowExecution",
					"mobilehub:CreateProject",
					"mobilehub:CreateServiceRole",
					"mobilehub:DeleteProject",
					"mobilehub:GenerateProjectParameters",
					"mobilehub:GetProject",
					"mobilehub:ListAvailableFeatures",
					"mobilehub:ListAvailableRegions",
					"mobilehub:ListProjects",
					"mobilehub:UpdateProject",
					"mobilehub:ValidateProject",
					"mobilehub:VerifyServiceRole",
					"organizations:AcceptHandshake",
					"organizations:AttachPolicy",
					"organizations:CancelHandshake",
					"organizations:CreateAccount",
					"organizations:CreateOrganization",
					"organizations:CreateOrganizationalUnit",
					"organizations:CreatePolicy",
					"organizations:DeclineHandshake",
					"organizations:DeleteOrganization",
					"organizations:DeleteOrganizationalUnit",
					"organizations:DeletePolicy",
					"organizations:DescribeAccount",
					"organizations:DescribeCreateAccountStatus",
					"organizations:DescribeHandshake",
					"organizations:DescribeOrganization",
					"organizations:DescribeOrganizationalUnit",
					"organizations:DescribePolicy",
					"organizations:DetachPolicy",
					"organizations:DisablePolicyType",
					"organizations:EnableAllFeatures",
					"organizations:EnablePolicyType",
					"organizations:InviteAccountToOrganization",
					"organizations:LeaveOrganization",
					"organizations:ListAccounts",
					"organizations:ListAccountsForParent",
					"organizations:ListChildren",
					"organizations:ListCreateAccountStatus",
					"organizations:ListHandshakesForAccount",
					"organizations:ListHandshakesForOrganization",
					"organizations:ListOrganizationalUnitsForParent",
					"organizations:ListParents",
					"organizations:ListPolicies",
					"organizations:ListPoliciesForTarget",
					"organizations:ListRoots",
					"organizations:ListTargetsForPolicy",
					"organizations:MoveAccount",
					"organizations:RemoveAccountFromOrganization",
					"organizations:UpdateOrganizationalUnit",
					"organizations:UpdatePolicy",
					"iam:AddRoleToInstanceProfile",
					"iam:AddUserToGroup",
					"iam:AddClientIDToOpenIDConnectProvider",
					"iam:AttachGroupPolicy",
					"iam:AttachRolePolicy",
					"iam:AttachUserPolicy",
					"iam:ChangePassword",
					"iam:CreateAccessKey",
					"iam:CreateAccountAlias",
					"iam:CreateGroup",
					"iam:CreateInstanceProfile",
					"iam:CreateLoginProfile",
					"iam:CreateOpenIDConnectProvider",
					"iam:CreatePolicy",
					"iam:CreatePolicyVersion",
					"iam:CreateRole",
					"iam:CreateSAMLProvider",
					"iam:CreateUser",
					"iam:CreateVirtualMFADevice",
					"iam:DeactivateMFADevice",
					"iam:DeleteAccessKey",
					"iam:DeleteAccountAlias",
					"iam:DeleteAccountPasswordPolicy",
					"iam:DeleteGroup",
					"iam:DeleteGroupPolicy",
					"iam:DeleteInstanceProfile",
					"iam:DeleteLoginProfile",
					"iam:DeleteOpenIDConnectProvider",
					"iam:DeletePolicy",
					"iam:DeletePolicyVersion",
					"iam:DeleteRole",
					"iam:DeleteRolePolicy",
					"iam:DeleteSAMLProvider",
					"iam:DeleteSSHPublicKey",
					"iam:DeleteServerCertificate",
					"iam:DeleteSigningCertificate",
					"iam:DeleteUser",
					"iam:DeleteUserPolicy",
					"iam:DeleteVirtualMFADevice",
					"iam:DetachGroupPolicy",
					"iam:DetachRolePolicy",
					"iam:DetachUserPolicy",
					"iam:EnableMFADevice",
					"iam:GenerateCredentialReport",
					"iam:GetAccessKeyLastUsed",
					"iam:GetAccountAuthorizationDetails",
					"iam:GetAccountPasswordPolicy",
					"iam:GetAccountSummary",
					"iam:GetContextKeysForCustomPolicy",
					"iam:GetContextKeysForPrincipalPolicy",
					"iam:GetCredentialReport",
					"iam:GetGroup",
					"iam:GetGroupPolicy",
					"iam:GetInstanceProfile",
					"iam:GetLoginProfile",
					"iam:GetOpenIDConnectProvider",
					"iam:GetPolicy",
					"iam:GetPolicyVersion",
					"iam:GetRole",
					"iam:GetRolePolicy",
					"iam:GetSAMLProvider",
					"iam:GetSSHPublicKey",
					"iam:GetServerCertificate",
					"iam:GetServiceLastAccessedDetailsWithEntities",
					"iam:GetUser",
					"iam:GetUserPolicy",
					"iam:ListAccessKeys",
					"iam:ListAccountAliases",
					"iam:ListAttachedGroupPolicies",
					"iam:ListAttachedRolePolicies",
					"iam:ListAttachedUserPolicies",
					"iam:ListEntitiesForPolicy",
					"iam:ListGroupPolicies",
					"iam:ListGroups",
					"iam:ListGroupsForUser",
					"iam:ListInstanceProfiles",
					"iam:ListInstanceProfilesForRole",
					"iam:ListMFADevices",
					"iam:ListOpenIDConnectProviders",
					"iam:ListPolicies",
					"iam:ListPoliciesGrantingServiceAccess",
					"iam:ListPolicyVersions",
					"iam:ListRolePolicies",
					"iam:ListRoles",
					"iam:ListSAMLProviders",
					"iam:ListSSHPublicKeys",
					"iam:ListServerCertificates",
					"iam:ListSigningCertificates",
					"iam:ListUserPolicies",
					"iam:ListUsers",
					"iam:ListVirtualMFADevices",
					"iam:PutGroupPolicy",
					"iam:PutRolePolicy",
					"iam:PutUserPolicy",
					"iam:RemoveClientIDFromOpenIDConnectProvider",
					"iam:RemoveRoleFromInstanceProfile",
					"iam:RemoveUserFromGroup",
					"iam:ResyncMFADevice",
					"iam:SetDefaultPolicyVersion",
					"iam:SimulateCustomPolicy",
					"iam:SimulatePrincipalPolicy",
					"iam:UpdateAccessKey",
					"iam:UpdateAccountPasswordPolicy",
					"iam:UpdateAssumeRolePolicy",
					"iam:UpdateGroup",
					"iam:UpdateLoginProfile",
					"iam:UpdateOpenIDConnectProviderThumbprint",
					"iam:UpdateSAMLProvider",
					"iam:UpdateSSHPublicKey",
					"iam:UpdateServerCertificate",
					"iam:UpdateSigningCertificate",
					"iam:UpdateUser",
					"iam:UploadSSHPublicKey",
					"iam:UploadServerCertificate",
					"iam:UploadSigningCertificate",
					"iam:GenerateServiceLastAccessedDetails",
					"iam:GetServiceLastAccessedDetails",
					"iam:PassRole",
					"iam:CreateServiceLinkedRole",
					"iam:CreateServiceSpecificCredential",
					"iam:DeleteServiceLinkedRole",
					"iam:DeleteServiceSpecificCredential",
					"iam:GetServiceLinkedRoleDeletionStatus",
					"iam:ListServiceSpecificCredentials",
					"iam:ResetServiceSpecificCredential",
					"iam:UpdateRoleDescription",
					"iam:UpdateServiceSpecificCredential",
					"iam:TagUser",
					"iam:UntagUser",
					"iam:ListUserTags",
					"iam:TagRole",
					"iam:UntagRole",
					"iam:ListRoleTags",
					"cloudfront:CreateCloudFrontOriginAccessIdentity",
					"cloudfront:CreateDistribution",
					"cloudfront:CreateInvalidation",
					"cloudfront:CreateStreamingDistribution",
					"cloudfront:DeleteCloudFrontOriginAccessIdentity",
					"cloudfront:DeleteDistribution",
					"cloudfront:DeleteStreamingDistribution",
					"cloudfront:GetCloudFrontOriginAccessIdentity",
					"cloudfront:GetCloudFrontOriginAccessIdentityConfig",
					"cloudfront:GetDistribution",
					"cloudfront:GetDistributionConfig",
					"cloudfront:GetInvalidation",
					"cloudfront:GetStreamingDistribution",
					"cloudfront:GetStreamingDistributionConfig",
					"cloudfront:ListCloudFrontOriginAccessIdentities",
					"cloudfront:ListDistributions",
					"cloudfront:ListDistributionsByWebACLId",
					"cloudfront:ListInvalidations",
					"cloudfront:ListStreamingDistributions",
					"cloudfront:UpdateCloudFrontOriginAccessIdentity",
					"cloudfront:UpdateDistribution",
					"cloudfront:UpdateStreamingDistribution",
					"cloudfront:ListTagsForResource",
					"cloudfront:TagResource",
					"cloudfront:UntagResource",
					"route53:AssociateVPCWithHostedZone",
					"route53:ChangeResourceRecordSets",
					"route53:ChangeTagsForResource",
					"route53:CreateHealthCheck",
					"route53:CreateHostedZone",
					"route53:CreateQueryLoggingConfig",
					"route53:CreateReusableDelegationSet",
					"route53:CreateTrafficPolicy",
					"route53:CreateTrafficPolicyInstance",
					"route53:CreateTrafficPolicyVersion",
					"route53:CreateVPCAssociationAuthorization",
					"route53:DeleteHealthCheck",
					"route53:DeleteHostedZone",
					"route53:DeleteQueryLoggingConfig",
					"route53:DeleteReusableDelegationSet",
					"route53:DeleteTrafficPolicy",
					"route53:DeleteTrafficPolicyInstance",
					"route53:DeleteVPCAssociationAuthorization",
					"route53:DisassociateVPCFromHostedZone",
					"route53:GetChange",
					"route53:GetCheckerIpRanges",
					"route53:GetGeoLocation",
					"route53:GetHealthCheck",
					"route53:GetHealthCheckCount",
					"route53:GetHealthCheckLastFailureReason",
					"route53:GetHealthCheckStatus",
					"route53:GetHostedZone",
					"route53:GetHostedZoneCount",
					"route53:GetQueryLoggingConfig",
					"route53:GetReusableDelegationSet",
					"route53:GetTrafficPolicy",
					"route53:GetTrafficPolicyInstance",
					"route53:GetTrafficPolicyInstanceCount",
					"route53:ListGeoLocations",
					"route53:ListHealthChecks",
					"route53:ListHostedZones",
					"route53:ListHostedZonesByName",
					"route53:ListQueryLoggingConfigs",
					"route53:ListResourceRecordSets",
					"route53:ListReusableDelegationSets",
					"route53:ListTagsForResource",
					"route53:ListTagsForResources",
					"route53:ListTrafficPolicies",
					"route53:ListTrafficPolicyInstances",
					"route53:ListTrafficPolicyInstancesByHostedZone",
					"route53:ListTrafficPolicyInstancesByPolicy",
					"route53:ListTrafficPolicyVersions",
					"route53:ListVPCAssociationAuthorizations",
					"route53:TestDNSAnswer",
					"route53:UpdateHealthCheck",
					"route53:UpdateHostedZoneComment",
					"route53:UpdateTrafficPolicyComment",
					"route53:UpdateTrafficPolicyInstance",
					"route53:DisableDomainAutoRenew",
					"route53:EnableDomainAutoRenew",
					"clouddirectory:AddFacetToObject",
					"clouddirectory:ApplySchema",
					"clouddirectory:AttachObject",
					"clouddirectory:AttachPolicy",
					"clouddirectory:AttachToIndex",
					"clouddirectory:AttachTypedLink",
					"clouddirectory:BatchRead",
					"clouddirectory:BatchWrite",
					"clouddirectory:CreateDirectory",
					"clouddirectory:CreateFacet",
					"clouddirectory:CreateIndex",
					"clouddirectory:CreateObject",
					"clouddirectory:CreateSchema",
					"clouddirectory:CreateTypedLinkFacet",
					"clouddirectory:DeleteDirectory",
					"clouddirectory:DeleteFacet",
					"clouddirectory:DeleteObject",
					"clouddirectory:DeleteSchema",
					"clouddirectory:DeleteTypedLinkFacet",
					"clouddirectory:DetachFromIndex",
					"clouddirectory:DetachObject",
					"clouddirectory:DetachPolicy",
					"clouddirectory:DetachTypedLink",
					"clouddirectory:DisableDirectory",
					"clouddirectory:EnableDirectory",
					"clouddirectory:GetAppliedSchemaVersion",
					"clouddirectory:GetDirectory",
					"clouddirectory:GetFacet",
					"clouddirectory:GetObjectAttributes",
					"clouddirectory:GetObjectInformation",
					"clouddirectory:GetSchemaAsJson",
					"clouddirectory:GetTypedLinkFacetInformation",
					"clouddirectory:ListAppliedSchemaArns",
					"clouddirectory:ListAttachedIndices",
					"clouddirectory:ListDevelopmentSchemaArns",
					"clouddirectory:ListDirectories",
					"clouddirectory:ListFacetAttributes",
					"clouddirectory:ListFacetNames",
					"clouddirectory:ListIncomingTypedLinks",
					"clouddirectory:ListIndex",
					"clouddirectory:ListObjectAttributes",
					"clouddirectory:ListObjectChildren",
					"clouddirectory:ListObjectParentPaths",
					"clouddirectory:ListObjectParents",
					"clouddirectory:ListObjectPolicies",
					"clouddirectory:ListOutgoingTypedLinks",
					"clouddirectory:ListPolicyAttachments",
					"clouddirectory:ListPublishedSchemaArns",
					"clouddirectory:ListTagsForResource",
					"clouddirectory:ListTypedLinkFacetAttributes",
					"clouddirectory:ListTypedLinkFacetNames",
					"clouddirectory:LookupPolicy",
					"clouddirectory:PublishSchema",
					"clouddirectory:PutSchemaFromJson",
					"clouddirectory:RemoveFacetFromObject",
					"clouddirectory:TagResource",
					"clouddirectory:UntagResource",
					"clouddirectory:UpdateFacet",
					"clouddirectory:UpdateObjectAttributes",
					"clouddirectory:UpdateSchema",
					"clouddirectory:UpdateTypedLinkFacet",
					"clouddirectory:UpgradeAppliedSchema",
					"clouddirectory:UpgradePublishedSchema",
					"route53domains:CheckDomainAvailability",
					"route53domains:DeleteDomain",
					"route53domains:DeleteTagsForDomain",
					"route53domains:DisableDomainAutoRenew",
					"route53domains:DisableDomainTransferLock",
					"route53domains:EnableDomainAutoRenew",
					"route53domains:EnableDomainTransferLock",
					"route53domains:GetContactReachabilityStatus",
					"route53domains:GetDomainDetail",
					"route53domains:GetDomainSuggestions",
					"route53domains:GetOperationDetail",
					"route53domains:ListDomains",
					"route53domains:ListOperations",
					"route53domains:ListTagsForDomain",
					"route53domains:RegisterDomain",
					"route53domains:RenewDomain",
					"route53domains:ResendContactReachabilityEmail",
					"route53domains:RetrieveDomainAuthCode",
					"route53domains:TransferDomain",
					"route53domains:UpdateDomainContact",
					"route53domains:UpdateDomainContactPrivacy",
					"route53domains:UpdateDomainNameservers",
					"route53domains:UpdateTagsForDomain",
					"route53domains:ViewBilling",
					"route53domains:ChangeAutoRenew",
					"route53domains:ListDnssec",
					"route53domains:AddDnssec",
					"route53domains:RemoveDnssec",
					"workspaces:CreateWorkspaces",
					"workspaces:DescribeWorkspaceBundles",
					"workspaces:DescribeWorkspaceDirectories",
					"workspaces:DescribeWorkspaces",
					"workspaces:RebootWorkspaces",
					"workspaces:RebuildWorkspaces",
					"workspaces:TerminateWorkspaces",
					"ec2:DetachInternetGateway",
					"ec2:AcceptVpcPeeringConnection",
					"ec2:AssociateIamInstanceProfile",
					"ec2:AttachClassicLinkVpc",
					"ec2:AttachVolume",
					"ec2:AuthorizeSecurityGroupEgress",
					"ec2:AuthorizeSecurityGroupIngress",
					"ec2:CreateTags",
					"ec2:CreateVolume",
					"ec2:CreateVpcPeeringConnection",
					"ec2:DeleteCustomerGateway",
					"ec2:DeleteDhcpOptions",
					"ec2:DeleteInternetGateway",
					"ec2:DeleteNetworkAcl",
					"ec2:DeleteNetworkAclEntry",
					"ec2:DeleteRoute",
					"ec2:DeleteRouteTable",
					"ec2:DeleteSecurityGroup",
					"ec2:DeleteTags",
					"ec2:DeleteVolume",
					"ec2:DeleteVpcPeeringConnection",
					"ec2:DetachClassicLinkVpc",
					"ec2:DetachVolume",
					"ec2:DisableVpcClassicLink",
					"ec2:DisassociateIamInstanceProfile",
					"ec2:EnableVpcClassicLink",
					"ec2:GetConsoleScreenshot",
					"ec2:RebootInstances",
					"ec2:RejectVpcPeeringConnection",
					"ec2:ReplaceIamInstanceProfileAssociation",
					"ec2:RevokeSecurityGroupEgress",
					"ec2:RevokeSecurityGroupIngress",
					"ec2:RunInstances",
					"ec2:StartInstances",
					"ec2:StopInstances",
					"ec2:TerminateInstances",
					"ec2:AllocateAddress",
					"ec2:AllocateHosts",
					"ec2:AssignPrivateIpAddresses",
					"ec2:AssociateAddress",
					"ec2:AssociateDhcpOptions",
					"ec2:AssociateRouteTable",
					"ec2:AttachInternetGateway",
					"ec2:AttachNetworkInterface",
					"ec2:AttachVpnGateway",
					"ec2:BundleInstance",
					"ec2:CancelBundleTask",
					"ec2:CancelConversionTask",
					"ec2:CancelExportTask",
					"ec2:CancelImportTask",
					"ec2:CancelReservedInstancesListing",
					"ec2:CancelSpotFleetRequests",
					"ec2:CancelSpotInstanceRequests",
					"ec2:ConfirmProductInstance",
					"ec2:CopyImage",
					"ec2:CopySnapshot",
					"ec2:CreateCustomerGateway",
					"ec2:CreateDhcpOptions",
					"ec2:CreateFlowLogs",
					"ec2:CreateImage",
					"ec2:CreateInstanceExportTask",
					"ec2:CreateInternetGateway",
					"ec2:CreateKeyPair",
					"ec2:CreateNatGateway",
					"ec2:CreateNetworkAcl",
					"ec2:CreateNetworkAclEntry",
					"ec2:CreateNetworkInterface",
					"ec2:CreatePlacementGroup",
					"ec2:CreateReservedInstancesListing",
					"ec2:CreateRoute",
					"ec2:CreateRouteTable",
					"ec2:CreateSecurityGroup",
					"ec2:CreateSnapshot",
					"ec2:CreateSpotDatafeedSubscription",
					"ec2:CreateSubnet",
					"ec2:CreateVpc",
					"ec2:CreateVpcEndpoint",
					"ec2:CreateVpnConnection",
					"ec2:CreateVpnConnectionRoute",
					"ec2:CreateVpnGateway",
					"ec2:DeleteFlowLogs",
					"ec2:DeleteKeyPair",
					"ec2:DeleteNatGateway",
					"ec2:DeleteNetworkInterface",
					"ec2:DeletePlacementGroup",
					"ec2:DeleteSnapshot",
					"ec2:DeleteSpotDatafeedSubscription",
					"ec2:DeleteSubnet",
					"ec2:DeleteVpc",
					"ec2:DeleteVpcEndpoints",
					"ec2:DeleteVpnConnection",
					"ec2:DeleteVpnConnectionRoute",
					"ec2:DeleteVpnGateway",
					"ec2:DeregisterImage",
					"ec2:DescribeAccountAttributes",
					"ec2:DescribeAddresses",
					"ec2:DescribeAvailabilityZones",
					"ec2:DescribeBundleTasks",
					"ec2:DescribeClassicLinkInstances",
					"ec2:DescribeConversionTasks",
					"ec2:DescribeCustomerGateways",
					"ec2:DescribeDhcpOptions",
					"ec2:DescribeExportTasks",
					"ec2:DescribeHosts",
					"ec2:DescribeIdentityIdFormat",
					"ec2:DescribeIdFormat",
					"ec2:DescribeImageAttribute",
					"ec2:DescribeImages",
					"ec2:DescribeImportImageTasks",
					"ec2:DescribeImportSnapshotTasks",
					"ec2:DescribeInstanceAttribute",
					"ec2:DescribeInstances",
					"ec2:DescribeInstanceStatus",
					"ec2:DescribeInternetGateways",
					"ec2:DescribeFlowLogs",
					"ec2:DescribeKeyPairs",
					"ec2:DescribeMovingAddresses",
					"ec2:DescribeNatGateways",
					"ec2:DescribeNetworkAcls",
					"ec2:DescribeNetworkInterfaceAttribute",
					"ec2:DescribeNetworkInterfaces",
					"ec2:DescribePlacementGroups",
					"ec2:DescribePrefixLists",
					"ec2:DescribeRegions",
					"ec2:DescribeReservedInstances",
					"ec2:DescribeReservedInstancesListings",
					"ec2:DescribeReservedInstancesModifications",
					"ec2:DescribeReservedInstancesOfferings",
					"ec2:DescribeRouteTables",
					"ec2:DescribeScheduledInstanceAvailability",
					"ec2:DescribeScheduledInstances",
					"ec2:DescribeSecurityGroupReferences",
					"ec2:DescribeSecurityGroups",
					"ec2:DescribeStaleSecurityGroups",
					"ec2:DescribeSnapshotAttribute",
					"ec2:DescribeSnapshots",
					"ec2:DescribeSpotDatafeedSubscription",
					"ec2:DescribeSpotFleetInstances",
					"ec2:DescribeSpotFleetRequestHistory",
					"ec2:DescribeSpotFleetRequests",
					"ec2:DescribeSpotInstanceRequests",
					"ec2:DescribeSpotPriceHistory",
					"ec2:DescribeSubnets",
					"ec2:DescribeTags",
					"ec2:DescribeVolumeAttribute",
					"ec2:DescribeVolumes",
					"ec2:DescribeVolumeStatus",
					"ec2:DescribeVpcAttribute",
					"ec2:DescribeVpcClassicLink",
					"ec2:DescribeVpcClassicLinkDnsSupport",
					"ec2:DescribeVpcEndpoints",
					"ec2:DescribeVpcEndpointServices",
					"ec2:DescribeVpcPeeringConnections",
					"ec2:DescribeVpcs",
					"ec2:DescribeVpnConnections",
					"ec2:DescribeVpnGateways",
					"ec2:DetachNetworkInterface",
					"ec2:DetachVpnGateway",
					"ec2:DisableVgwRoutePropagation",
					"ec2:DisableVpcClassicLinkDnsSupport",
					"ec2:DisassociateAddress",
					"ec2:DisassociateRouteTable",
					"ec2:EnableVgwRoutePropagation",
					"ec2:EnableVolumeIO",
					"ec2:EnableVpcClassicLinkDnsSupport",
					"ec2:GetConsoleOutput",
					"ec2:GetPasswordData",
					"ec2:ImportImage",
					"ec2:ImportInstance",
					"ec2:ImportKeyPair",
					"ec2:ImportSnapshot",
					"ec2:ImportVolume",
					"ec2:ModifyHosts",
					"ec2:ModifyIdentityIdFormat",
					"ec2:ModifyIdFormat",
					"ec2:ModifyImageAttribute",
					"ec2:ModifyInstanceAttribute",
					"ec2:ModifyInstancePlacement",
					"ec2:ModifyNetworkInterfaceAttribute",
					"ec2:ModifyReservedInstances",
					"ec2:ModifySnapshotAttribute",
					"ec2:ModifySpotFleetRequest",
					"ec2:ModifySubnetAttribute",
					"ec2:ModifyVolumeAttribute",
					"ec2:ModifyVpcAttribute",
					"ec2:ModifyVpcEndpoint",
					"ec2:ModifyVpcPeeringConnectionOptions",
					"ec2:MonitorInstances",
					"ec2:MoveAddressToVpc",
					"ec2:PurchaseReservedInstancesOffering",
					"ec2:PurchaseScheduledInstances",
					"ec2:RegisterImage",
					"ec2:ReleaseAddress",
					"ec2:ReleaseHosts",
					"ec2:ReplaceNetworkAclAssociation",
					"ec2:ReplaceNetworkAclEntry",
					"ec2:ReplaceRoute",
					"ec2:ReplaceRouteTableAssociation",
					"ec2:ReportInstanceStatus",
					"ec2:RequestSpotFleet",
					"ec2:RequestSpotInstances",
					"ec2:ResetImageAttribute",
					"ec2:ResetInstanceAttribute",
					"ec2:ResetNetworkInterfaceAttribute",
					"ec2:ResetSnapshotAttribute",
					"ec2:RestoreAddressToClassic",
					"ec2:RunScheduledInstances",
					"ec2:UnassignPrivateIpAddresses",
					"ec2:UnmonitorInstances"
				]
			}
		}
	]
}
